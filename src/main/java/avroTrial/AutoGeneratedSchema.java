package avroTrial;

/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
@SuppressWarnings("all")
/** Sqoop import of QueryResult */
@org.apache.avro.specific.AvroGenerated
public class AutoGeneratedSchema extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"AutoGeneratedSchema\",\"doc\":\"Sqoop import of QueryResult\",\"fields\":[{\"name\":\"CALMONTH\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"CALMONTH\",\"sqlType\":\"-9\"},{\"name\":\"CALDAY\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"CALDAY\",\"sqlType\":\"-9\"},{\"name\":\"MATERIAL\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"MATERIAL\",\"sqlType\":\"-9\"},{\"name\":\"EANUPC\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"EANUPC\",\"sqlType\":\"-9\"},{\"name\":\"PLANT\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"PLANT\",\"sqlType\":\"-9\"},{\"name\":\"BILL_TYPE\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"BILL_TYPE\",\"sqlType\":\"-9\"},{\"name\":\"STOR_LOC\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"STOR_LOC\",\"sqlType\":\"-9\"},{\"name\":\"DISTR_CHAN\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"DISTR_CHAN\",\"sqlType\":\"-9\"},{\"name\":\"SOLD_TO\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"SOLD_TO\",\"sqlType\":\"-9\"},{\"name\":\"RT_PROMO\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"RT_PROMO\",\"sqlType\":\"-9\"},{\"name\":\"CUST_GROUP\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"CUST_GROUP\",\"sqlType\":\"-9\"},{\"name\":\"_BIC_ZOPC0104\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"/BIC/ZOPC0104\",\"sqlType\":\"-9\"},{\"name\":\"_BIC_ZOPC0513\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"/BIC/ZOPC0513\",\"sqlType\":\"-9\"},{\"name\":\"RECORDMODE\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"RECORDMODE\",\"sqlType\":\"-9\"},{\"name\":\"MAT_PLANT\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"MAT_PLANT\",\"sqlType\":\"-9\"},{\"name\":\"SALES_DIST\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"SALES_DIST\",\"sqlType\":\"-9\"},{\"name\":\"_BIC_ZOPC0006\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"/BIC/ZOPC0006\",\"sqlType\":\"-9\"},{\"name\":\"_BIC_ZOPC0041\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"/BIC/ZOPC0041\",\"sqlType\":\"-9\"},{\"name\":\"_BIC_ZOPC0042\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"/BIC/ZOPC0042\",\"sqlType\":\"-9\"},{\"name\":\"_BIC_ZOPC0043\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"/BIC/ZOPC0043\",\"sqlType\":\"-9\"},{\"name\":\"VENDOR\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"VENDOR\",\"sqlType\":\"-9\"},{\"name\":\"_BIC_ZMMC0003\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"/BIC/ZMMC0003\",\"sqlType\":\"-9\"},{\"name\":\"_BIC_ZPURC004\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"/BIC/ZPURC004\",\"sqlType\":\"-9\"},{\"name\":\"_BIC_ZMMC0005\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"/BIC/ZMMC0005\",\"sqlType\":\"-9\"},{\"name\":\"TAX_AMOUNT\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"TAX_AMOUNT\",\"sqlType\":\"3\"},{\"name\":\"DOC_CURRCY\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"DOC_CURRCY\",\"sqlType\":\"-9\"},{\"name\":\"COST\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"COST\",\"sqlType\":\"3\"},{\"name\":\"CSHDSC_BAS\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"CSHDSC_BAS\",\"sqlType\":\"3\"},{\"name\":\"DENOMINTR\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"DENOMINTR\",\"sqlType\":\"3\"},{\"name\":\"EXCHG_RATE\",\"type\":[\"null\",\"double\"],\"default\":null,\"columnName\":\"EXCHG_RATE\",\"sqlType\":\"8\"},{\"name\":\"EXCHG_STAT\",\"type\":[\"null\",\"double\"],\"default\":null,\"columnName\":\"EXCHG_STAT\",\"sqlType\":\"8\"},{\"name\":\"EXRATEXACC\",\"type\":[\"null\",\"double\"],\"default\":null,\"columnName\":\"EXRATEXACC\",\"sqlType\":\"8\"},{\"name\":\"EXRATE_ACC\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"EXRATE_ACC\",\"sqlType\":\"3\"},{\"name\":\"GROSS_VAL\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"GROSS_VAL\",\"sqlType\":\"3\"},{\"name\":\"GRS_WGT_DL\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"GRS_WGT_DL\",\"sqlType\":\"3\"},{\"name\":\"INV_QTY\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"INV_QTY\",\"sqlType\":\"3\"},{\"name\":\"UNIT_OF_WT\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"UNIT_OF_WT\",\"sqlType\":\"-9\"},{\"name\":\"SALES_UNIT\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"SALES_UNIT\",\"sqlType\":\"-9\"},{\"name\":\"NETVAL_INV\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"NETVAL_INV\",\"sqlType\":\"3\"},{\"name\":\"NET_WGT_DL\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"NET_WGT_DL\",\"sqlType\":\"3\"},{\"name\":\"NO_INV_IT\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"NO_INV_IT\",\"sqlType\":\"3\"},{\"name\":\"NUMERATOR\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"NUMERATOR\",\"sqlType\":\"3\"},{\"name\":\"REQ_QTY\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"REQ_QTY\",\"sqlType\":\"3\"},{\"name\":\"BASE_UOM\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"BASE_UOM\",\"sqlType\":\"-9\"},{\"name\":\"SCALE_QTY\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"SCALE_QTY\",\"sqlType\":\"3\"},{\"name\":\"SUBTOTAL_1\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"SUBTOTAL_1\",\"sqlType\":\"3\"},{\"name\":\"SUBTOTAL_2\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"SUBTOTAL_2\",\"sqlType\":\"3\"},{\"name\":\"SUBTOTAL_3\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"SUBTOTAL_3\",\"sqlType\":\"3\"},{\"name\":\"SUBTOTAL_4\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"SUBTOTAL_4\",\"sqlType\":\"3\"},{\"name\":\"SUBTOTAL_5\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"SUBTOTAL_5\",\"sqlType\":\"3\"},{\"name\":\"SUBTOTAL_6\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"SUBTOTAL_6\",\"sqlType\":\"3\"},{\"name\":\"_BIC_ZOPK0021\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"/BIC/ZOPK0021\",\"sqlType\":\"3\"},{\"name\":\"_BIC_ZOPK0053\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"/BIC/ZOPK0053\",\"sqlType\":\"3\"},{\"name\":\"_BIC_ZOPK0054\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"/BIC/ZOPK0054\",\"sqlType\":\"3\"},{\"name\":\"_BIC_ZOPK0055\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"/BIC/ZOPK0055\",\"sqlType\":\"3\"},{\"name\":\"_BIC_ZPRICE11\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"/BIC/ZPRICE11\",\"sqlType\":\"3\"},{\"name\":\"_BIC_ZPRICE12\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"/BIC/ZPRICE12\",\"sqlType\":\"3\"},{\"name\":\"CURRENCY\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"CURRENCY\",\"sqlType\":\"-9\"},{\"name\":\"_BIC_ZOPK0145\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"/BIC/ZOPK0145\",\"sqlType\":\"3\"},{\"name\":\"AMOUNT\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"AMOUNT\",\"sqlType\":\"3\"},{\"name\":\"_BIC_ZOPK0048\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"/BIC/ZOPK0048\",\"sqlType\":\"3\"},{\"name\":\"_BIC_ZOPK0049\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"/BIC/ZOPK0049\",\"sqlType\":\"3\"},{\"name\":\"RT_TAXCODE\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"RT_TAXCODE\",\"sqlType\":\"-9\"},{\"name\":\"_BIC_ZOPK0047\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"/BIC/ZOPK0047\",\"sqlType\":\"3\"},{\"name\":\"_BIC_ZOPC0055\",\"type\":[\"null\",\"string\"],\"default\":null,\"columnName\":\"/BIC/ZOPC0055\",\"sqlType\":\"-9\"}],\"tableName\":\"QueryResult\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public CharSequence CALMONTH;
  @Deprecated public CharSequence CALDAY;
  @Deprecated public CharSequence MATERIAL;
  @Deprecated public CharSequence EANUPC;
  @Deprecated public CharSequence PLANT;
  @Deprecated public CharSequence BILL_TYPE;
  @Deprecated public CharSequence STOR_LOC;
  @Deprecated public CharSequence DISTR_CHAN;
  @Deprecated public CharSequence SOLD_TO;
  @Deprecated public CharSequence RT_PROMO;
  @Deprecated public CharSequence CUST_GROUP;
  @Deprecated public CharSequence _BIC_ZOPC0104;
  @Deprecated public CharSequence _BIC_ZOPC0513;
  @Deprecated public CharSequence RECORDMODE;
  @Deprecated public CharSequence MAT_PLANT;
  @Deprecated public CharSequence SALES_DIST;
  @Deprecated public CharSequence _BIC_ZOPC0006;
  @Deprecated public CharSequence _BIC_ZOPC0041;
  @Deprecated public CharSequence _BIC_ZOPC0042;
  @Deprecated public CharSequence _BIC_ZOPC0043;
  @Deprecated public CharSequence VENDOR;
  @Deprecated public CharSequence _BIC_ZMMC0003;
  @Deprecated public CharSequence _BIC_ZPURC004;
  @Deprecated public CharSequence _BIC_ZMMC0005;
  @Deprecated public CharSequence TAX_AMOUNT;
  @Deprecated public CharSequence DOC_CURRCY;
  @Deprecated public CharSequence COST;
  @Deprecated public CharSequence CSHDSC_BAS;
  @Deprecated public CharSequence DENOMINTR;
  @Deprecated public Double EXCHG_RATE;
  @Deprecated public Double EXCHG_STAT;
  @Deprecated public Double EXRATEXACC;
  @Deprecated public CharSequence EXRATE_ACC;
  @Deprecated public CharSequence GROSS_VAL;
  @Deprecated public CharSequence GRS_WGT_DL;
  @Deprecated public CharSequence INV_QTY;
  @Deprecated public CharSequence UNIT_OF_WT;
  @Deprecated public CharSequence SALES_UNIT;
  @Deprecated public CharSequence NETVAL_INV;
  @Deprecated public CharSequence NET_WGT_DL;
  @Deprecated public CharSequence NO_INV_IT;
  @Deprecated public CharSequence NUMERATOR;
  @Deprecated public CharSequence REQ_QTY;
  @Deprecated public CharSequence BASE_UOM;
  @Deprecated public CharSequence SCALE_QTY;
  @Deprecated public CharSequence SUBTOTAL_1;
  @Deprecated public CharSequence SUBTOTAL_2;
  @Deprecated public CharSequence SUBTOTAL_3;
  @Deprecated public CharSequence SUBTOTAL_4;
  @Deprecated public CharSequence SUBTOTAL_5;
  @Deprecated public CharSequence SUBTOTAL_6;
  @Deprecated public CharSequence _BIC_ZOPK0021;
  @Deprecated public CharSequence _BIC_ZOPK0053;
  @Deprecated public CharSequence _BIC_ZOPK0054;
  @Deprecated public CharSequence _BIC_ZOPK0055;
  @Deprecated public CharSequence _BIC_ZPRICE11;
  @Deprecated public CharSequence _BIC_ZPRICE12;
  @Deprecated public CharSequence CURRENCY;
  @Deprecated public CharSequence _BIC_ZOPK0145;
  @Deprecated public CharSequence AMOUNT;
  @Deprecated public CharSequence _BIC_ZOPK0048;
  @Deprecated public CharSequence _BIC_ZOPK0049;
  @Deprecated public CharSequence RT_TAXCODE;
  @Deprecated public CharSequence _BIC_ZOPK0047;
  @Deprecated public CharSequence _BIC_ZOPC0055;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public AutoGeneratedSchema() {}

  /**
   * All-args constructor.
   */
  public AutoGeneratedSchema(CharSequence CALMONTH, CharSequence CALDAY, CharSequence MATERIAL, CharSequence EANUPC, CharSequence PLANT, CharSequence BILL_TYPE, CharSequence STOR_LOC, CharSequence DISTR_CHAN, CharSequence SOLD_TO, CharSequence RT_PROMO, CharSequence CUST_GROUP, CharSequence _BIC_ZOPC0104, CharSequence _BIC_ZOPC0513, CharSequence RECORDMODE, CharSequence MAT_PLANT, CharSequence SALES_DIST, CharSequence _BIC_ZOPC0006, CharSequence _BIC_ZOPC0041, CharSequence _BIC_ZOPC0042, CharSequence _BIC_ZOPC0043, CharSequence VENDOR, CharSequence _BIC_ZMMC0003, CharSequence _BIC_ZPURC004, CharSequence _BIC_ZMMC0005, CharSequence TAX_AMOUNT, CharSequence DOC_CURRCY, CharSequence COST, CharSequence CSHDSC_BAS, CharSequence DENOMINTR, Double EXCHG_RATE, Double EXCHG_STAT, Double EXRATEXACC, CharSequence EXRATE_ACC, CharSequence GROSS_VAL, CharSequence GRS_WGT_DL, CharSequence INV_QTY, CharSequence UNIT_OF_WT, CharSequence SALES_UNIT, CharSequence NETVAL_INV, CharSequence NET_WGT_DL, CharSequence NO_INV_IT, CharSequence NUMERATOR, CharSequence REQ_QTY, CharSequence BASE_UOM, CharSequence SCALE_QTY, CharSequence SUBTOTAL_1, CharSequence SUBTOTAL_2, CharSequence SUBTOTAL_3, CharSequence SUBTOTAL_4, CharSequence SUBTOTAL_5, CharSequence SUBTOTAL_6, CharSequence _BIC_ZOPK0021, CharSequence _BIC_ZOPK0053, CharSequence _BIC_ZOPK0054, CharSequence _BIC_ZOPK0055, CharSequence _BIC_ZPRICE11, CharSequence _BIC_ZPRICE12, CharSequence CURRENCY, CharSequence _BIC_ZOPK0145, CharSequence AMOUNT, CharSequence _BIC_ZOPK0048, CharSequence _BIC_ZOPK0049, CharSequence RT_TAXCODE, CharSequence _BIC_ZOPK0047, CharSequence _BIC_ZOPC0055) {
    this.CALMONTH = CALMONTH;
    this.CALDAY = CALDAY;
    this.MATERIAL = MATERIAL;
    this.EANUPC = EANUPC;
    this.PLANT = PLANT;
    this.BILL_TYPE = BILL_TYPE;
    this.STOR_LOC = STOR_LOC;
    this.DISTR_CHAN = DISTR_CHAN;
    this.SOLD_TO = SOLD_TO;
    this.RT_PROMO = RT_PROMO;
    this.CUST_GROUP = CUST_GROUP;
    this._BIC_ZOPC0104 = _BIC_ZOPC0104;
    this._BIC_ZOPC0513 = _BIC_ZOPC0513;
    this.RECORDMODE = RECORDMODE;
    this.MAT_PLANT = MAT_PLANT;
    this.SALES_DIST = SALES_DIST;
    this._BIC_ZOPC0006 = _BIC_ZOPC0006;
    this._BIC_ZOPC0041 = _BIC_ZOPC0041;
    this._BIC_ZOPC0042 = _BIC_ZOPC0042;
    this._BIC_ZOPC0043 = _BIC_ZOPC0043;
    this.VENDOR = VENDOR;
    this._BIC_ZMMC0003 = _BIC_ZMMC0003;
    this._BIC_ZPURC004 = _BIC_ZPURC004;
    this._BIC_ZMMC0005 = _BIC_ZMMC0005;
    this.TAX_AMOUNT = TAX_AMOUNT;
    this.DOC_CURRCY = DOC_CURRCY;
    this.COST = COST;
    this.CSHDSC_BAS = CSHDSC_BAS;
    this.DENOMINTR = DENOMINTR;
    this.EXCHG_RATE = EXCHG_RATE;
    this.EXCHG_STAT = EXCHG_STAT;
    this.EXRATEXACC = EXRATEXACC;
    this.EXRATE_ACC = EXRATE_ACC;
    this.GROSS_VAL = GROSS_VAL;
    this.GRS_WGT_DL = GRS_WGT_DL;
    this.INV_QTY = INV_QTY;
    this.UNIT_OF_WT = UNIT_OF_WT;
    this.SALES_UNIT = SALES_UNIT;
    this.NETVAL_INV = NETVAL_INV;
    this.NET_WGT_DL = NET_WGT_DL;
    this.NO_INV_IT = NO_INV_IT;
    this.NUMERATOR = NUMERATOR;
    this.REQ_QTY = REQ_QTY;
    this.BASE_UOM = BASE_UOM;
    this.SCALE_QTY = SCALE_QTY;
    this.SUBTOTAL_1 = SUBTOTAL_1;
    this.SUBTOTAL_2 = SUBTOTAL_2;
    this.SUBTOTAL_3 = SUBTOTAL_3;
    this.SUBTOTAL_4 = SUBTOTAL_4;
    this.SUBTOTAL_5 = SUBTOTAL_5;
    this.SUBTOTAL_6 = SUBTOTAL_6;
    this._BIC_ZOPK0021 = _BIC_ZOPK0021;
    this._BIC_ZOPK0053 = _BIC_ZOPK0053;
    this._BIC_ZOPK0054 = _BIC_ZOPK0054;
    this._BIC_ZOPK0055 = _BIC_ZOPK0055;
    this._BIC_ZPRICE11 = _BIC_ZPRICE11;
    this._BIC_ZPRICE12 = _BIC_ZPRICE12;
    this.CURRENCY = CURRENCY;
    this._BIC_ZOPK0145 = _BIC_ZOPK0145;
    this.AMOUNT = AMOUNT;
    this._BIC_ZOPK0048 = _BIC_ZOPK0048;
    this._BIC_ZOPK0049 = _BIC_ZOPK0049;
    this.RT_TAXCODE = RT_TAXCODE;
    this._BIC_ZOPK0047 = _BIC_ZOPK0047;
    this._BIC_ZOPC0055 = _BIC_ZOPC0055;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public Object get(int field$) {
    switch (field$) {
    case 0: return CALMONTH;
    case 1: return CALDAY;
    case 2: return MATERIAL;
    case 3: return EANUPC;
    case 4: return PLANT;
    case 5: return BILL_TYPE;
    case 6: return STOR_LOC;
    case 7: return DISTR_CHAN;
    case 8: return SOLD_TO;
    case 9: return RT_PROMO;
    case 10: return CUST_GROUP;
    case 11: return _BIC_ZOPC0104;
    case 12: return _BIC_ZOPC0513;
    case 13: return RECORDMODE;
    case 14: return MAT_PLANT;
    case 15: return SALES_DIST;
    case 16: return _BIC_ZOPC0006;
    case 17: return _BIC_ZOPC0041;
    case 18: return _BIC_ZOPC0042;
    case 19: return _BIC_ZOPC0043;
    case 20: return VENDOR;
    case 21: return _BIC_ZMMC0003;
    case 22: return _BIC_ZPURC004;
    case 23: return _BIC_ZMMC0005;
    case 24: return TAX_AMOUNT;
    case 25: return DOC_CURRCY;
    case 26: return COST;
    case 27: return CSHDSC_BAS;
    case 28: return DENOMINTR;
    case 29: return EXCHG_RATE;
    case 30: return EXCHG_STAT;
    case 31: return EXRATEXACC;
    case 32: return EXRATE_ACC;
    case 33: return GROSS_VAL;
    case 34: return GRS_WGT_DL;
    case 35: return INV_QTY;
    case 36: return UNIT_OF_WT;
    case 37: return SALES_UNIT;
    case 38: return NETVAL_INV;
    case 39: return NET_WGT_DL;
    case 40: return NO_INV_IT;
    case 41: return NUMERATOR;
    case 42: return REQ_QTY;
    case 43: return BASE_UOM;
    case 44: return SCALE_QTY;
    case 45: return SUBTOTAL_1;
    case 46: return SUBTOTAL_2;
    case 47: return SUBTOTAL_3;
    case 48: return SUBTOTAL_4;
    case 49: return SUBTOTAL_5;
    case 50: return SUBTOTAL_6;
    case 51: return _BIC_ZOPK0021;
    case 52: return _BIC_ZOPK0053;
    case 53: return _BIC_ZOPK0054;
    case 54: return _BIC_ZOPK0055;
    case 55: return _BIC_ZPRICE11;
    case 56: return _BIC_ZPRICE12;
    case 57: return CURRENCY;
    case 58: return _BIC_ZOPK0145;
    case 59: return AMOUNT;
    case 60: return _BIC_ZOPK0048;
    case 61: return _BIC_ZOPK0049;
    case 62: return RT_TAXCODE;
    case 63: return _BIC_ZOPK0047;
    case 64: return _BIC_ZOPC0055;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: CALMONTH = (CharSequence)value$; break;
    case 1: CALDAY = (CharSequence)value$; break;
    case 2: MATERIAL = (CharSequence)value$; break;
    case 3: EANUPC = (CharSequence)value$; break;
    case 4: PLANT = (CharSequence)value$; break;
    case 5: BILL_TYPE = (CharSequence)value$; break;
    case 6: STOR_LOC = (CharSequence)value$; break;
    case 7: DISTR_CHAN = (CharSequence)value$; break;
    case 8: SOLD_TO = (CharSequence)value$; break;
    case 9: RT_PROMO = (CharSequence)value$; break;
    case 10: CUST_GROUP = (CharSequence)value$; break;
    case 11: _BIC_ZOPC0104 = (CharSequence)value$; break;
    case 12: _BIC_ZOPC0513 = (CharSequence)value$; break;
    case 13: RECORDMODE = (CharSequence)value$; break;
    case 14: MAT_PLANT = (CharSequence)value$; break;
    case 15: SALES_DIST = (CharSequence)value$; break;
    case 16: _BIC_ZOPC0006 = (CharSequence)value$; break;
    case 17: _BIC_ZOPC0041 = (CharSequence)value$; break;
    case 18: _BIC_ZOPC0042 = (CharSequence)value$; break;
    case 19: _BIC_ZOPC0043 = (CharSequence)value$; break;
    case 20: VENDOR = (CharSequence)value$; break;
    case 21: _BIC_ZMMC0003 = (CharSequence)value$; break;
    case 22: _BIC_ZPURC004 = (CharSequence)value$; break;
    case 23: _BIC_ZMMC0005 = (CharSequence)value$; break;
    case 24: TAX_AMOUNT = (CharSequence)value$; break;
    case 25: DOC_CURRCY = (CharSequence)value$; break;
    case 26: COST = (CharSequence)value$; break;
    case 27: CSHDSC_BAS = (CharSequence)value$; break;
    case 28: DENOMINTR = (CharSequence)value$; break;
    case 29: EXCHG_RATE = (Double)value$; break;
    case 30: EXCHG_STAT = (Double)value$; break;
    case 31: EXRATEXACC = (Double)value$; break;
    case 32: EXRATE_ACC = (CharSequence)value$; break;
    case 33: GROSS_VAL = (CharSequence)value$; break;
    case 34: GRS_WGT_DL = (CharSequence)value$; break;
    case 35: INV_QTY = (CharSequence)value$; break;
    case 36: UNIT_OF_WT = (CharSequence)value$; break;
    case 37: SALES_UNIT = (CharSequence)value$; break;
    case 38: NETVAL_INV = (CharSequence)value$; break;
    case 39: NET_WGT_DL = (CharSequence)value$; break;
    case 40: NO_INV_IT = (CharSequence)value$; break;
    case 41: NUMERATOR = (CharSequence)value$; break;
    case 42: REQ_QTY = (CharSequence)value$; break;
    case 43: BASE_UOM = (CharSequence)value$; break;
    case 44: SCALE_QTY = (CharSequence)value$; break;
    case 45: SUBTOTAL_1 = (CharSequence)value$; break;
    case 46: SUBTOTAL_2 = (CharSequence)value$; break;
    case 47: SUBTOTAL_3 = (CharSequence)value$; break;
    case 48: SUBTOTAL_4 = (CharSequence)value$; break;
    case 49: SUBTOTAL_5 = (CharSequence)value$; break;
    case 50: SUBTOTAL_6 = (CharSequence)value$; break;
    case 51: _BIC_ZOPK0021 = (CharSequence)value$; break;
    case 52: _BIC_ZOPK0053 = (CharSequence)value$; break;
    case 53: _BIC_ZOPK0054 = (CharSequence)value$; break;
    case 54: _BIC_ZOPK0055 = (CharSequence)value$; break;
    case 55: _BIC_ZPRICE11 = (CharSequence)value$; break;
    case 56: _BIC_ZPRICE12 = (CharSequence)value$; break;
    case 57: CURRENCY = (CharSequence)value$; break;
    case 58: _BIC_ZOPK0145 = (CharSequence)value$; break;
    case 59: AMOUNT = (CharSequence)value$; break;
    case 60: _BIC_ZOPK0048 = (CharSequence)value$; break;
    case 61: _BIC_ZOPK0049 = (CharSequence)value$; break;
    case 62: RT_TAXCODE = (CharSequence)value$; break;
    case 63: _BIC_ZOPK0047 = (CharSequence)value$; break;
    case 64: _BIC_ZOPC0055 = (CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'CALMONTH' field.
   */
  public CharSequence getCALMONTH() {
    return CALMONTH;
  }

  /**
   * Sets the value of the 'CALMONTH' field.
   * @param value the value to set.
   */
  public void setCALMONTH(CharSequence value) {
    this.CALMONTH = value;
  }

  /**
   * Gets the value of the 'CALDAY' field.
   */
  public CharSequence getCALDAY() {
    return CALDAY;
  }

  /**
   * Sets the value of the 'CALDAY' field.
   * @param value the value to set.
   */
  public void setCALDAY(CharSequence value) {
    this.CALDAY = value;
  }

  /**
   * Gets the value of the 'MATERIAL' field.
   */
  public CharSequence getMATERIAL() {
    return MATERIAL;
  }

  /**
   * Sets the value of the 'MATERIAL' field.
   * @param value the value to set.
   */
  public void setMATERIAL(CharSequence value) {
    this.MATERIAL = value;
  }

  /**
   * Gets the value of the 'EANUPC' field.
   */
  public CharSequence getEANUPC() {
    return EANUPC;
  }

  /**
   * Sets the value of the 'EANUPC' field.
   * @param value the value to set.
   */
  public void setEANUPC(CharSequence value) {
    this.EANUPC = value;
  }

  /**
   * Gets the value of the 'PLANT' field.
   */
  public CharSequence getPLANT() {
    return PLANT;
  }

  /**
   * Sets the value of the 'PLANT' field.
   * @param value the value to set.
   */
  public void setPLANT(CharSequence value) {
    this.PLANT = value;
  }

  /**
   * Gets the value of the 'BILL_TYPE' field.
   */
  public CharSequence getBILLTYPE() {
    return BILL_TYPE;
  }

  /**
   * Sets the value of the 'BILL_TYPE' field.
   * @param value the value to set.
   */
  public void setBILLTYPE(CharSequence value) {
    this.BILL_TYPE = value;
  }

  /**
   * Gets the value of the 'STOR_LOC' field.
   */
  public CharSequence getSTORLOC() {
    return STOR_LOC;
  }

  /**
   * Sets the value of the 'STOR_LOC' field.
   * @param value the value to set.
   */
  public void setSTORLOC(CharSequence value) {
    this.STOR_LOC = value;
  }

  /**
   * Gets the value of the 'DISTR_CHAN' field.
   */
  public CharSequence getDISTRCHAN() {
    return DISTR_CHAN;
  }

  /**
   * Sets the value of the 'DISTR_CHAN' field.
   * @param value the value to set.
   */
  public void setDISTRCHAN(CharSequence value) {
    this.DISTR_CHAN = value;
  }

  /**
   * Gets the value of the 'SOLD_TO' field.
   */
  public CharSequence getSOLDTO() {
    return SOLD_TO;
  }

  /**
   * Sets the value of the 'SOLD_TO' field.
   * @param value the value to set.
   */
  public void setSOLDTO(CharSequence value) {
    this.SOLD_TO = value;
  }

  /**
   * Gets the value of the 'RT_PROMO' field.
   */
  public CharSequence getRTPROMO() {
    return RT_PROMO;
  }

  /**
   * Sets the value of the 'RT_PROMO' field.
   * @param value the value to set.
   */
  public void setRTPROMO(CharSequence value) {
    this.RT_PROMO = value;
  }

  /**
   * Gets the value of the 'CUST_GROUP' field.
   */
  public CharSequence getCUSTGROUP() {
    return CUST_GROUP;
  }

  /**
   * Sets the value of the 'CUST_GROUP' field.
   * @param value the value to set.
   */
  public void setCUSTGROUP(CharSequence value) {
    this.CUST_GROUP = value;
  }

  /**
   * Gets the value of the '_BIC_ZOPC0104' field.
   */
  public CharSequence getBICZOPC0104$1() {
    return _BIC_ZOPC0104;
  }

  /**
   * Sets the value of the '_BIC_ZOPC0104' field.
   * @param value the value to set.
   */
  public void setBICZOPC0104$1(CharSequence value) {
    this._BIC_ZOPC0104 = value;
  }

  /**
   * Gets the value of the '_BIC_ZOPC0513' field.
   */
  public CharSequence getBICZOPC0513$1() {
    return _BIC_ZOPC0513;
  }

  /**
   * Sets the value of the '_BIC_ZOPC0513' field.
   * @param value the value to set.
   */
  public void setBICZOPC0513$1(CharSequence value) {
    this._BIC_ZOPC0513 = value;
  }

  /**
   * Gets the value of the 'RECORDMODE' field.
   */
  public CharSequence getRECORDMODE() {
    return RECORDMODE;
  }

  /**
   * Sets the value of the 'RECORDMODE' field.
   * @param value the value to set.
   */
  public void setRECORDMODE(CharSequence value) {
    this.RECORDMODE = value;
  }

  /**
   * Gets the value of the 'MAT_PLANT' field.
   */
  public CharSequence getMATPLANT() {
    return MAT_PLANT;
  }

  /**
   * Sets the value of the 'MAT_PLANT' field.
   * @param value the value to set.
   */
  public void setMATPLANT(CharSequence value) {
    this.MAT_PLANT = value;
  }

  /**
   * Gets the value of the 'SALES_DIST' field.
   */
  public CharSequence getSALESDIST() {
    return SALES_DIST;
  }

  /**
   * Sets the value of the 'SALES_DIST' field.
   * @param value the value to set.
   */
  public void setSALESDIST(CharSequence value) {
    this.SALES_DIST = value;
  }

  /**
   * Gets the value of the '_BIC_ZOPC0006' field.
   */
  public CharSequence getBICZOPC0006$1() {
    return _BIC_ZOPC0006;
  }

  /**
   * Sets the value of the '_BIC_ZOPC0006' field.
   * @param value the value to set.
   */
  public void setBICZOPC0006$1(CharSequence value) {
    this._BIC_ZOPC0006 = value;
  }

  /**
   * Gets the value of the '_BIC_ZOPC0041' field.
   */
  public CharSequence getBICZOPC0041$1() {
    return _BIC_ZOPC0041;
  }

  /**
   * Sets the value of the '_BIC_ZOPC0041' field.
   * @param value the value to set.
   */
  public void setBICZOPC0041$1(CharSequence value) {
    this._BIC_ZOPC0041 = value;
  }

  /**
   * Gets the value of the '_BIC_ZOPC0042' field.
   */
  public CharSequence getBICZOPC0042$1() {
    return _BIC_ZOPC0042;
  }

  /**
   * Sets the value of the '_BIC_ZOPC0042' field.
   * @param value the value to set.
   */
  public void setBICZOPC0042$1(CharSequence value) {
    this._BIC_ZOPC0042 = value;
  }

  /**
   * Gets the value of the '_BIC_ZOPC0043' field.
   */
  public CharSequence getBICZOPC0043$1() {
    return _BIC_ZOPC0043;
  }

  /**
   * Sets the value of the '_BIC_ZOPC0043' field.
   * @param value the value to set.
   */
  public void setBICZOPC0043$1(CharSequence value) {
    this._BIC_ZOPC0043 = value;
  }

  /**
   * Gets the value of the 'VENDOR' field.
   */
  public CharSequence getVENDOR() {
    return VENDOR;
  }

  /**
   * Sets the value of the 'VENDOR' field.
   * @param value the value to set.
   */
  public void setVENDOR(CharSequence value) {
    this.VENDOR = value;
  }

  /**
   * Gets the value of the '_BIC_ZMMC0003' field.
   */
  public CharSequence getBICZMMC0003$1() {
    return _BIC_ZMMC0003;
  }

  /**
   * Sets the value of the '_BIC_ZMMC0003' field.
   * @param value the value to set.
   */
  public void setBICZMMC0003$1(CharSequence value) {
    this._BIC_ZMMC0003 = value;
  }

  /**
   * Gets the value of the '_BIC_ZPURC004' field.
   */
  public CharSequence getBICZPURC004$1() {
    return _BIC_ZPURC004;
  }

  /**
   * Sets the value of the '_BIC_ZPURC004' field.
   * @param value the value to set.
   */
  public void setBICZPURC004$1(CharSequence value) {
    this._BIC_ZPURC004 = value;
  }

  /**
   * Gets the value of the '_BIC_ZMMC0005' field.
   */
  public CharSequence getBICZMMC0005$1() {
    return _BIC_ZMMC0005;
  }

  /**
   * Sets the value of the '_BIC_ZMMC0005' field.
   * @param value the value to set.
   */
  public void setBICZMMC0005$1(CharSequence value) {
    this._BIC_ZMMC0005 = value;
  }

  /**
   * Gets the value of the 'TAX_AMOUNT' field.
   */
  public CharSequence getTAXAMOUNT() {
    return TAX_AMOUNT;
  }

  /**
   * Sets the value of the 'TAX_AMOUNT' field.
   * @param value the value to set.
   */
  public void setTAXAMOUNT(CharSequence value) {
    this.TAX_AMOUNT = value;
  }

  /**
   * Gets the value of the 'DOC_CURRCY' field.
   */
  public CharSequence getDOCCURRCY() {
    return DOC_CURRCY;
  }

  /**
   * Sets the value of the 'DOC_CURRCY' field.
   * @param value the value to set.
   */
  public void setDOCCURRCY(CharSequence value) {
    this.DOC_CURRCY = value;
  }

  /**
   * Gets the value of the 'COST' field.
   */
  public CharSequence getCOST() {
    return COST;
  }

  /**
   * Sets the value of the 'COST' field.
   * @param value the value to set.
   */
  public void setCOST(CharSequence value) {
    this.COST = value;
  }

  /**
   * Gets the value of the 'CSHDSC_BAS' field.
   */
  public CharSequence getCSHDSCBAS() {
    return CSHDSC_BAS;
  }

  /**
   * Sets the value of the 'CSHDSC_BAS' field.
   * @param value the value to set.
   */
  public void setCSHDSCBAS(CharSequence value) {
    this.CSHDSC_BAS = value;
  }

  /**
   * Gets the value of the 'DENOMINTR' field.
   */
  public CharSequence getDENOMINTR() {
    return DENOMINTR;
  }

  /**
   * Sets the value of the 'DENOMINTR' field.
   * @param value the value to set.
   */
  public void setDENOMINTR(CharSequence value) {
    this.DENOMINTR = value;
  }

  /**
   * Gets the value of the 'EXCHG_RATE' field.
   */
  public Double getEXCHGRATE() {
    return EXCHG_RATE;
  }

  /**
   * Sets the value of the 'EXCHG_RATE' field.
   * @param value the value to set.
   */
  public void setEXCHGRATE(Double value) {
    this.EXCHG_RATE = value;
  }

  /**
   * Gets the value of the 'EXCHG_STAT' field.
   */
  public Double getEXCHGSTAT() {
    return EXCHG_STAT;
  }

  /**
   * Sets the value of the 'EXCHG_STAT' field.
   * @param value the value to set.
   */
  public void setEXCHGSTAT(Double value) {
    this.EXCHG_STAT = value;
  }

  /**
   * Gets the value of the 'EXRATEXACC' field.
   */
  public Double getEXRATEXACC() {
    return EXRATEXACC;
  }

  /**
   * Sets the value of the 'EXRATEXACC' field.
   * @param value the value to set.
   */
  public void setEXRATEXACC(Double value) {
    this.EXRATEXACC = value;
  }

  /**
   * Gets the value of the 'EXRATE_ACC' field.
   */
  public CharSequence getEXRATEACC() {
    return EXRATE_ACC;
  }

  /**
   * Sets the value of the 'EXRATE_ACC' field.
   * @param value the value to set.
   */
  public void setEXRATEACC(CharSequence value) {
    this.EXRATE_ACC = value;
  }

  /**
   * Gets the value of the 'GROSS_VAL' field.
   */
  public CharSequence getGROSSVAL() {
    return GROSS_VAL;
  }

  /**
   * Sets the value of the 'GROSS_VAL' field.
   * @param value the value to set.
   */
  public void setGROSSVAL(CharSequence value) {
    this.GROSS_VAL = value;
  }

  /**
   * Gets the value of the 'GRS_WGT_DL' field.
   */
  public CharSequence getGRSWGTDL() {
    return GRS_WGT_DL;
  }

  /**
   * Sets the value of the 'GRS_WGT_DL' field.
   * @param value the value to set.
   */
  public void setGRSWGTDL(CharSequence value) {
    this.GRS_WGT_DL = value;
  }

  /**
   * Gets the value of the 'INV_QTY' field.
   */
  public CharSequence getINVQTY() {
    return INV_QTY;
  }

  /**
   * Sets the value of the 'INV_QTY' field.
   * @param value the value to set.
   */
  public void setINVQTY(CharSequence value) {
    this.INV_QTY = value;
  }

  /**
   * Gets the value of the 'UNIT_OF_WT' field.
   */
  public CharSequence getUNITOFWT() {
    return UNIT_OF_WT;
  }

  /**
   * Sets the value of the 'UNIT_OF_WT' field.
   * @param value the value to set.
   */
  public void setUNITOFWT(CharSequence value) {
    this.UNIT_OF_WT = value;
  }

  /**
   * Gets the value of the 'SALES_UNIT' field.
   */
  public CharSequence getSALESUNIT() {
    return SALES_UNIT;
  }

  /**
   * Sets the value of the 'SALES_UNIT' field.
   * @param value the value to set.
   */
  public void setSALESUNIT(CharSequence value) {
    this.SALES_UNIT = value;
  }

  /**
   * Gets the value of the 'NETVAL_INV' field.
   */
  public CharSequence getNETVALINV() {
    return NETVAL_INV;
  }

  /**
   * Sets the value of the 'NETVAL_INV' field.
   * @param value the value to set.
   */
  public void setNETVALINV(CharSequence value) {
    this.NETVAL_INV = value;
  }

  /**
   * Gets the value of the 'NET_WGT_DL' field.
   */
  public CharSequence getNETWGTDL() {
    return NET_WGT_DL;
  }

  /**
   * Sets the value of the 'NET_WGT_DL' field.
   * @param value the value to set.
   */
  public void setNETWGTDL(CharSequence value) {
    this.NET_WGT_DL = value;
  }

  /**
   * Gets the value of the 'NO_INV_IT' field.
   */
  public CharSequence getNOINVIT() {
    return NO_INV_IT;
  }

  /**
   * Sets the value of the 'NO_INV_IT' field.
   * @param value the value to set.
   */
  public void setNOINVIT(CharSequence value) {
    this.NO_INV_IT = value;
  }

  /**
   * Gets the value of the 'NUMERATOR' field.
   */
  public CharSequence getNUMERATOR() {
    return NUMERATOR;
  }

  /**
   * Sets the value of the 'NUMERATOR' field.
   * @param value the value to set.
   */
  public void setNUMERATOR(CharSequence value) {
    this.NUMERATOR = value;
  }

  /**
   * Gets the value of the 'REQ_QTY' field.
   */
  public CharSequence getREQQTY() {
    return REQ_QTY;
  }

  /**
   * Sets the value of the 'REQ_QTY' field.
   * @param value the value to set.
   */
  public void setREQQTY(CharSequence value) {
    this.REQ_QTY = value;
  }

  /**
   * Gets the value of the 'BASE_UOM' field.
   */
  public CharSequence getBASEUOM() {
    return BASE_UOM;
  }

  /**
   * Sets the value of the 'BASE_UOM' field.
   * @param value the value to set.
   */
  public void setBASEUOM(CharSequence value) {
    this.BASE_UOM = value;
  }

  /**
   * Gets the value of the 'SCALE_QTY' field.
   */
  public CharSequence getSCALEQTY() {
    return SCALE_QTY;
  }

  /**
   * Sets the value of the 'SCALE_QTY' field.
   * @param value the value to set.
   */
  public void setSCALEQTY(CharSequence value) {
    this.SCALE_QTY = value;
  }

  /**
   * Gets the value of the 'SUBTOTAL_1' field.
   */
  public CharSequence getSUBTOTAL1() {
    return SUBTOTAL_1;
  }

  /**
   * Sets the value of the 'SUBTOTAL_1' field.
   * @param value the value to set.
   */
  public void setSUBTOTAL1(CharSequence value) {
    this.SUBTOTAL_1 = value;
  }

  /**
   * Gets the value of the 'SUBTOTAL_2' field.
   */
  public CharSequence getSUBTOTAL2() {
    return SUBTOTAL_2;
  }

  /**
   * Sets the value of the 'SUBTOTAL_2' field.
   * @param value the value to set.
   */
  public void setSUBTOTAL2(CharSequence value) {
    this.SUBTOTAL_2 = value;
  }

  /**
   * Gets the value of the 'SUBTOTAL_3' field.
   */
  public CharSequence getSUBTOTAL3() {
    return SUBTOTAL_3;
  }

  /**
   * Sets the value of the 'SUBTOTAL_3' field.
   * @param value the value to set.
   */
  public void setSUBTOTAL3(CharSequence value) {
    this.SUBTOTAL_3 = value;
  }

  /**
   * Gets the value of the 'SUBTOTAL_4' field.
   */
  public CharSequence getSUBTOTAL4() {
    return SUBTOTAL_4;
  }

  /**
   * Sets the value of the 'SUBTOTAL_4' field.
   * @param value the value to set.
   */
  public void setSUBTOTAL4(CharSequence value) {
    this.SUBTOTAL_4 = value;
  }

  /**
   * Gets the value of the 'SUBTOTAL_5' field.
   */
  public CharSequence getSUBTOTAL5() {
    return SUBTOTAL_5;
  }

  /**
   * Sets the value of the 'SUBTOTAL_5' field.
   * @param value the value to set.
   */
  public void setSUBTOTAL5(CharSequence value) {
    this.SUBTOTAL_5 = value;
  }

  /**
   * Gets the value of the 'SUBTOTAL_6' field.
   */
  public CharSequence getSUBTOTAL6() {
    return SUBTOTAL_6;
  }

  /**
   * Sets the value of the 'SUBTOTAL_6' field.
   * @param value the value to set.
   */
  public void setSUBTOTAL6(CharSequence value) {
    this.SUBTOTAL_6 = value;
  }

  /**
   * Gets the value of the '_BIC_ZOPK0021' field.
   */
  public CharSequence getBICZOPK0021$1() {
    return _BIC_ZOPK0021;
  }

  /**
   * Sets the value of the '_BIC_ZOPK0021' field.
   * @param value the value to set.
   */
  public void setBICZOPK0021$1(CharSequence value) {
    this._BIC_ZOPK0021 = value;
  }

  /**
   * Gets the value of the '_BIC_ZOPK0053' field.
   */
  public CharSequence getBICZOPK0053$1() {
    return _BIC_ZOPK0053;
  }

  /**
   * Sets the value of the '_BIC_ZOPK0053' field.
   * @param value the value to set.
   */
  public void setBICZOPK0053$1(CharSequence value) {
    this._BIC_ZOPK0053 = value;
  }

  /**
   * Gets the value of the '_BIC_ZOPK0054' field.
   */
  public CharSequence getBICZOPK0054$1() {
    return _BIC_ZOPK0054;
  }

  /**
   * Sets the value of the '_BIC_ZOPK0054' field.
   * @param value the value to set.
   */
  public void setBICZOPK0054$1(CharSequence value) {
    this._BIC_ZOPK0054 = value;
  }

  /**
   * Gets the value of the '_BIC_ZOPK0055' field.
   */
  public CharSequence getBICZOPK0055$1() {
    return _BIC_ZOPK0055;
  }

  /**
   * Sets the value of the '_BIC_ZOPK0055' field.
   * @param value the value to set.
   */
  public void setBICZOPK0055$1(CharSequence value) {
    this._BIC_ZOPK0055 = value;
  }

  /**
   * Gets the value of the '_BIC_ZPRICE11' field.
   */
  public CharSequence getBICZPRICE11$1() {
    return _BIC_ZPRICE11;
  }

  /**
   * Sets the value of the '_BIC_ZPRICE11' field.
   * @param value the value to set.
   */
  public void setBICZPRICE11$1(CharSequence value) {
    this._BIC_ZPRICE11 = value;
  }

  /**
   * Gets the value of the '_BIC_ZPRICE12' field.
   */
  public CharSequence getBICZPRICE12$1() {
    return _BIC_ZPRICE12;
  }

  /**
   * Sets the value of the '_BIC_ZPRICE12' field.
   * @param value the value to set.
   */
  public void setBICZPRICE12$1(CharSequence value) {
    this._BIC_ZPRICE12 = value;
  }

  /**
   * Gets the value of the 'CURRENCY' field.
   */
  public CharSequence getCURRENCY() {
    return CURRENCY;
  }

  /**
   * Sets the value of the 'CURRENCY' field.
   * @param value the value to set.
   */
  public void setCURRENCY(CharSequence value) {
    this.CURRENCY = value;
  }

  /**
   * Gets the value of the '_BIC_ZOPK0145' field.
   */
  public CharSequence getBICZOPK0145$1() {
    return _BIC_ZOPK0145;
  }

  /**
   * Sets the value of the '_BIC_ZOPK0145' field.
   * @param value the value to set.
   */
  public void setBICZOPK0145$1(CharSequence value) {
    this._BIC_ZOPK0145 = value;
  }

  /**
   * Gets the value of the 'AMOUNT' field.
   */
  public CharSequence getAMOUNT() {
    return AMOUNT;
  }

  /**
   * Sets the value of the 'AMOUNT' field.
   * @param value the value to set.
   */
  public void setAMOUNT(CharSequence value) {
    this.AMOUNT = value;
  }

  /**
   * Gets the value of the '_BIC_ZOPK0048' field.
   */
  public CharSequence getBICZOPK0048$1() {
    return _BIC_ZOPK0048;
  }

  /**
   * Sets the value of the '_BIC_ZOPK0048' field.
   * @param value the value to set.
   */
  public void setBICZOPK0048$1(CharSequence value) {
    this._BIC_ZOPK0048 = value;
  }

  /**
   * Gets the value of the '_BIC_ZOPK0049' field.
   */
  public CharSequence getBICZOPK0049$1() {
    return _BIC_ZOPK0049;
  }

  /**
   * Sets the value of the '_BIC_ZOPK0049' field.
   * @param value the value to set.
   */
  public void setBICZOPK0049$1(CharSequence value) {
    this._BIC_ZOPK0049 = value;
  }

  /**
   * Gets the value of the 'RT_TAXCODE' field.
   */
  public CharSequence getRTTAXCODE() {
    return RT_TAXCODE;
  }

  /**
   * Sets the value of the 'RT_TAXCODE' field.
   * @param value the value to set.
   */
  public void setRTTAXCODE(CharSequence value) {
    this.RT_TAXCODE = value;
  }

  /**
   * Gets the value of the '_BIC_ZOPK0047' field.
   */
  public CharSequence getBICZOPK0047$1() {
    return _BIC_ZOPK0047;
  }

  /**
   * Sets the value of the '_BIC_ZOPK0047' field.
   * @param value the value to set.
   */
  public void setBICZOPK0047$1(CharSequence value) {
    this._BIC_ZOPK0047 = value;
  }

  /**
   * Gets the value of the '_BIC_ZOPC0055' field.
   */
  public CharSequence getBICZOPC0055$1() {
    return _BIC_ZOPC0055;
  }

  /**
   * Sets the value of the '_BIC_ZOPC0055' field.
   * @param value the value to set.
   */
  public void setBICZOPC0055$1(CharSequence value) {
    this._BIC_ZOPC0055 = value;
  }

  /** Creates a new AutoGeneratedSchema RecordBuilder */
  public static Builder newBuilder() {
    return new Builder();
  }
  
  /** Creates a new AutoGeneratedSchema RecordBuilder by copying an existing Builder */
  public static Builder newBuilder(Builder other) {
    return new Builder(other);
  }
  
  /** Creates a new AutoGeneratedSchema RecordBuilder by copying an existing AutoGeneratedSchema instance */
  public static Builder newBuilder(AutoGeneratedSchema other) {
    return new Builder(other);
  }
  
  /**
   * RecordBuilder for AutoGeneratedSchema instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<AutoGeneratedSchema>
    implements org.apache.avro.data.RecordBuilder<AutoGeneratedSchema> {

    private CharSequence CALMONTH;
    private CharSequence CALDAY;
    private CharSequence MATERIAL;
    private CharSequence EANUPC;
    private CharSequence PLANT;
    private CharSequence BILL_TYPE;
    private CharSequence STOR_LOC;
    private CharSequence DISTR_CHAN;
    private CharSequence SOLD_TO;
    private CharSequence RT_PROMO;
    private CharSequence CUST_GROUP;
    private CharSequence _BIC_ZOPC0104;
    private CharSequence _BIC_ZOPC0513;
    private CharSequence RECORDMODE;
    private CharSequence MAT_PLANT;
    private CharSequence SALES_DIST;
    private CharSequence _BIC_ZOPC0006;
    private CharSequence _BIC_ZOPC0041;
    private CharSequence _BIC_ZOPC0042;
    private CharSequence _BIC_ZOPC0043;
    private CharSequence VENDOR;
    private CharSequence _BIC_ZMMC0003;
    private CharSequence _BIC_ZPURC004;
    private CharSequence _BIC_ZMMC0005;
    private CharSequence TAX_AMOUNT;
    private CharSequence DOC_CURRCY;
    private CharSequence COST;
    private CharSequence CSHDSC_BAS;
    private CharSequence DENOMINTR;
    private Double EXCHG_RATE;
    private Double EXCHG_STAT;
    private Double EXRATEXACC;
    private CharSequence EXRATE_ACC;
    private CharSequence GROSS_VAL;
    private CharSequence GRS_WGT_DL;
    private CharSequence INV_QTY;
    private CharSequence UNIT_OF_WT;
    private CharSequence SALES_UNIT;
    private CharSequence NETVAL_INV;
    private CharSequence NET_WGT_DL;
    private CharSequence NO_INV_IT;
    private CharSequence NUMERATOR;
    private CharSequence REQ_QTY;
    private CharSequence BASE_UOM;
    private CharSequence SCALE_QTY;
    private CharSequence SUBTOTAL_1;
    private CharSequence SUBTOTAL_2;
    private CharSequence SUBTOTAL_3;
    private CharSequence SUBTOTAL_4;
    private CharSequence SUBTOTAL_5;
    private CharSequence SUBTOTAL_6;
    private CharSequence _BIC_ZOPK0021;
    private CharSequence _BIC_ZOPK0053;
    private CharSequence _BIC_ZOPK0054;
    private CharSequence _BIC_ZOPK0055;
    private CharSequence _BIC_ZPRICE11;
    private CharSequence _BIC_ZPRICE12;
    private CharSequence CURRENCY;
    private CharSequence _BIC_ZOPK0145;
    private CharSequence AMOUNT;
    private CharSequence _BIC_ZOPK0048;
    private CharSequence _BIC_ZOPK0049;
    private CharSequence RT_TAXCODE;
    private CharSequence _BIC_ZOPK0047;
    private CharSequence _BIC_ZOPC0055;

    /** Creates a new Builder */
    private Builder() {
      super(AutoGeneratedSchema.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.CALMONTH)) {
        this.CALMONTH = data().deepCopy(fields()[0].schema(), other.CALMONTH);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.CALDAY)) {
        this.CALDAY = data().deepCopy(fields()[1].schema(), other.CALDAY);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.MATERIAL)) {
        this.MATERIAL = data().deepCopy(fields()[2].schema(), other.MATERIAL);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.EANUPC)) {
        this.EANUPC = data().deepCopy(fields()[3].schema(), other.EANUPC);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.PLANT)) {
        this.PLANT = data().deepCopy(fields()[4].schema(), other.PLANT);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.BILL_TYPE)) {
        this.BILL_TYPE = data().deepCopy(fields()[5].schema(), other.BILL_TYPE);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.STOR_LOC)) {
        this.STOR_LOC = data().deepCopy(fields()[6].schema(), other.STOR_LOC);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.DISTR_CHAN)) {
        this.DISTR_CHAN = data().deepCopy(fields()[7].schema(), other.DISTR_CHAN);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.SOLD_TO)) {
        this.SOLD_TO = data().deepCopy(fields()[8].schema(), other.SOLD_TO);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.RT_PROMO)) {
        this.RT_PROMO = data().deepCopy(fields()[9].schema(), other.RT_PROMO);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.CUST_GROUP)) {
        this.CUST_GROUP = data().deepCopy(fields()[10].schema(), other.CUST_GROUP);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other._BIC_ZOPC0104)) {
        this._BIC_ZOPC0104 = data().deepCopy(fields()[11].schema(), other._BIC_ZOPC0104);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other._BIC_ZOPC0513)) {
        this._BIC_ZOPC0513 = data().deepCopy(fields()[12].schema(), other._BIC_ZOPC0513);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.RECORDMODE)) {
        this.RECORDMODE = data().deepCopy(fields()[13].schema(), other.RECORDMODE);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.MAT_PLANT)) {
        this.MAT_PLANT = data().deepCopy(fields()[14].schema(), other.MAT_PLANT);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.SALES_DIST)) {
        this.SALES_DIST = data().deepCopy(fields()[15].schema(), other.SALES_DIST);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other._BIC_ZOPC0006)) {
        this._BIC_ZOPC0006 = data().deepCopy(fields()[16].schema(), other._BIC_ZOPC0006);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other._BIC_ZOPC0041)) {
        this._BIC_ZOPC0041 = data().deepCopy(fields()[17].schema(), other._BIC_ZOPC0041);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other._BIC_ZOPC0042)) {
        this._BIC_ZOPC0042 = data().deepCopy(fields()[18].schema(), other._BIC_ZOPC0042);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other._BIC_ZOPC0043)) {
        this._BIC_ZOPC0043 = data().deepCopy(fields()[19].schema(), other._BIC_ZOPC0043);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.VENDOR)) {
        this.VENDOR = data().deepCopy(fields()[20].schema(), other.VENDOR);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other._BIC_ZMMC0003)) {
        this._BIC_ZMMC0003 = data().deepCopy(fields()[21].schema(), other._BIC_ZMMC0003);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other._BIC_ZPURC004)) {
        this._BIC_ZPURC004 = data().deepCopy(fields()[22].schema(), other._BIC_ZPURC004);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other._BIC_ZMMC0005)) {
        this._BIC_ZMMC0005 = data().deepCopy(fields()[23].schema(), other._BIC_ZMMC0005);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.TAX_AMOUNT)) {
        this.TAX_AMOUNT = data().deepCopy(fields()[24].schema(), other.TAX_AMOUNT);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.DOC_CURRCY)) {
        this.DOC_CURRCY = data().deepCopy(fields()[25].schema(), other.DOC_CURRCY);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.COST)) {
        this.COST = data().deepCopy(fields()[26].schema(), other.COST);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.CSHDSC_BAS)) {
        this.CSHDSC_BAS = data().deepCopy(fields()[27].schema(), other.CSHDSC_BAS);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.DENOMINTR)) {
        this.DENOMINTR = data().deepCopy(fields()[28].schema(), other.DENOMINTR);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.EXCHG_RATE)) {
        this.EXCHG_RATE = data().deepCopy(fields()[29].schema(), other.EXCHG_RATE);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.EXCHG_STAT)) {
        this.EXCHG_STAT = data().deepCopy(fields()[30].schema(), other.EXCHG_STAT);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.EXRATEXACC)) {
        this.EXRATEXACC = data().deepCopy(fields()[31].schema(), other.EXRATEXACC);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.EXRATE_ACC)) {
        this.EXRATE_ACC = data().deepCopy(fields()[32].schema(), other.EXRATE_ACC);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.GROSS_VAL)) {
        this.GROSS_VAL = data().deepCopy(fields()[33].schema(), other.GROSS_VAL);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.GRS_WGT_DL)) {
        this.GRS_WGT_DL = data().deepCopy(fields()[34].schema(), other.GRS_WGT_DL);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.INV_QTY)) {
        this.INV_QTY = data().deepCopy(fields()[35].schema(), other.INV_QTY);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.UNIT_OF_WT)) {
        this.UNIT_OF_WT = data().deepCopy(fields()[36].schema(), other.UNIT_OF_WT);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.SALES_UNIT)) {
        this.SALES_UNIT = data().deepCopy(fields()[37].schema(), other.SALES_UNIT);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.NETVAL_INV)) {
        this.NETVAL_INV = data().deepCopy(fields()[38].schema(), other.NETVAL_INV);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.NET_WGT_DL)) {
        this.NET_WGT_DL = data().deepCopy(fields()[39].schema(), other.NET_WGT_DL);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.NO_INV_IT)) {
        this.NO_INV_IT = data().deepCopy(fields()[40].schema(), other.NO_INV_IT);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.NUMERATOR)) {
        this.NUMERATOR = data().deepCopy(fields()[41].schema(), other.NUMERATOR);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.REQ_QTY)) {
        this.REQ_QTY = data().deepCopy(fields()[42].schema(), other.REQ_QTY);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.BASE_UOM)) {
        this.BASE_UOM = data().deepCopy(fields()[43].schema(), other.BASE_UOM);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.SCALE_QTY)) {
        this.SCALE_QTY = data().deepCopy(fields()[44].schema(), other.SCALE_QTY);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.SUBTOTAL_1)) {
        this.SUBTOTAL_1 = data().deepCopy(fields()[45].schema(), other.SUBTOTAL_1);
        fieldSetFlags()[45] = true;
      }
      if (isValidValue(fields()[46], other.SUBTOTAL_2)) {
        this.SUBTOTAL_2 = data().deepCopy(fields()[46].schema(), other.SUBTOTAL_2);
        fieldSetFlags()[46] = true;
      }
      if (isValidValue(fields()[47], other.SUBTOTAL_3)) {
        this.SUBTOTAL_3 = data().deepCopy(fields()[47].schema(), other.SUBTOTAL_3);
        fieldSetFlags()[47] = true;
      }
      if (isValidValue(fields()[48], other.SUBTOTAL_4)) {
        this.SUBTOTAL_4 = data().deepCopy(fields()[48].schema(), other.SUBTOTAL_4);
        fieldSetFlags()[48] = true;
      }
      if (isValidValue(fields()[49], other.SUBTOTAL_5)) {
        this.SUBTOTAL_5 = data().deepCopy(fields()[49].schema(), other.SUBTOTAL_5);
        fieldSetFlags()[49] = true;
      }
      if (isValidValue(fields()[50], other.SUBTOTAL_6)) {
        this.SUBTOTAL_6 = data().deepCopy(fields()[50].schema(), other.SUBTOTAL_6);
        fieldSetFlags()[50] = true;
      }
      if (isValidValue(fields()[51], other._BIC_ZOPK0021)) {
        this._BIC_ZOPK0021 = data().deepCopy(fields()[51].schema(), other._BIC_ZOPK0021);
        fieldSetFlags()[51] = true;
      }
      if (isValidValue(fields()[52], other._BIC_ZOPK0053)) {
        this._BIC_ZOPK0053 = data().deepCopy(fields()[52].schema(), other._BIC_ZOPK0053);
        fieldSetFlags()[52] = true;
      }
      if (isValidValue(fields()[53], other._BIC_ZOPK0054)) {
        this._BIC_ZOPK0054 = data().deepCopy(fields()[53].schema(), other._BIC_ZOPK0054);
        fieldSetFlags()[53] = true;
      }
      if (isValidValue(fields()[54], other._BIC_ZOPK0055)) {
        this._BIC_ZOPK0055 = data().deepCopy(fields()[54].schema(), other._BIC_ZOPK0055);
        fieldSetFlags()[54] = true;
      }
      if (isValidValue(fields()[55], other._BIC_ZPRICE11)) {
        this._BIC_ZPRICE11 = data().deepCopy(fields()[55].schema(), other._BIC_ZPRICE11);
        fieldSetFlags()[55] = true;
      }
      if (isValidValue(fields()[56], other._BIC_ZPRICE12)) {
        this._BIC_ZPRICE12 = data().deepCopy(fields()[56].schema(), other._BIC_ZPRICE12);
        fieldSetFlags()[56] = true;
      }
      if (isValidValue(fields()[57], other.CURRENCY)) {
        this.CURRENCY = data().deepCopy(fields()[57].schema(), other.CURRENCY);
        fieldSetFlags()[57] = true;
      }
      if (isValidValue(fields()[58], other._BIC_ZOPK0145)) {
        this._BIC_ZOPK0145 = data().deepCopy(fields()[58].schema(), other._BIC_ZOPK0145);
        fieldSetFlags()[58] = true;
      }
      if (isValidValue(fields()[59], other.AMOUNT)) {
        this.AMOUNT = data().deepCopy(fields()[59].schema(), other.AMOUNT);
        fieldSetFlags()[59] = true;
      }
      if (isValidValue(fields()[60], other._BIC_ZOPK0048)) {
        this._BIC_ZOPK0048 = data().deepCopy(fields()[60].schema(), other._BIC_ZOPK0048);
        fieldSetFlags()[60] = true;
      }
      if (isValidValue(fields()[61], other._BIC_ZOPK0049)) {
        this._BIC_ZOPK0049 = data().deepCopy(fields()[61].schema(), other._BIC_ZOPK0049);
        fieldSetFlags()[61] = true;
      }
      if (isValidValue(fields()[62], other.RT_TAXCODE)) {
        this.RT_TAXCODE = data().deepCopy(fields()[62].schema(), other.RT_TAXCODE);
        fieldSetFlags()[62] = true;
      }
      if (isValidValue(fields()[63], other._BIC_ZOPK0047)) {
        this._BIC_ZOPK0047 = data().deepCopy(fields()[63].schema(), other._BIC_ZOPK0047);
        fieldSetFlags()[63] = true;
      }
      if (isValidValue(fields()[64], other._BIC_ZOPC0055)) {
        this._BIC_ZOPC0055 = data().deepCopy(fields()[64].schema(), other._BIC_ZOPC0055);
        fieldSetFlags()[64] = true;
      }
    }
    
    /** Creates a Builder by copying an existing AutoGeneratedSchema instance */
    private Builder(AutoGeneratedSchema other) {
            super(AutoGeneratedSchema.SCHEMA$);
      if (isValidValue(fields()[0], other.CALMONTH)) {
        this.CALMONTH = data().deepCopy(fields()[0].schema(), other.CALMONTH);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.CALDAY)) {
        this.CALDAY = data().deepCopy(fields()[1].schema(), other.CALDAY);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.MATERIAL)) {
        this.MATERIAL = data().deepCopy(fields()[2].schema(), other.MATERIAL);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.EANUPC)) {
        this.EANUPC = data().deepCopy(fields()[3].schema(), other.EANUPC);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.PLANT)) {
        this.PLANT = data().deepCopy(fields()[4].schema(), other.PLANT);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.BILL_TYPE)) {
        this.BILL_TYPE = data().deepCopy(fields()[5].schema(), other.BILL_TYPE);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.STOR_LOC)) {
        this.STOR_LOC = data().deepCopy(fields()[6].schema(), other.STOR_LOC);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.DISTR_CHAN)) {
        this.DISTR_CHAN = data().deepCopy(fields()[7].schema(), other.DISTR_CHAN);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.SOLD_TO)) {
        this.SOLD_TO = data().deepCopy(fields()[8].schema(), other.SOLD_TO);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.RT_PROMO)) {
        this.RT_PROMO = data().deepCopy(fields()[9].schema(), other.RT_PROMO);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.CUST_GROUP)) {
        this.CUST_GROUP = data().deepCopy(fields()[10].schema(), other.CUST_GROUP);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other._BIC_ZOPC0104)) {
        this._BIC_ZOPC0104 = data().deepCopy(fields()[11].schema(), other._BIC_ZOPC0104);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other._BIC_ZOPC0513)) {
        this._BIC_ZOPC0513 = data().deepCopy(fields()[12].schema(), other._BIC_ZOPC0513);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.RECORDMODE)) {
        this.RECORDMODE = data().deepCopy(fields()[13].schema(), other.RECORDMODE);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.MAT_PLANT)) {
        this.MAT_PLANT = data().deepCopy(fields()[14].schema(), other.MAT_PLANT);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.SALES_DIST)) {
        this.SALES_DIST = data().deepCopy(fields()[15].schema(), other.SALES_DIST);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other._BIC_ZOPC0006)) {
        this._BIC_ZOPC0006 = data().deepCopy(fields()[16].schema(), other._BIC_ZOPC0006);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other._BIC_ZOPC0041)) {
        this._BIC_ZOPC0041 = data().deepCopy(fields()[17].schema(), other._BIC_ZOPC0041);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other._BIC_ZOPC0042)) {
        this._BIC_ZOPC0042 = data().deepCopy(fields()[18].schema(), other._BIC_ZOPC0042);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other._BIC_ZOPC0043)) {
        this._BIC_ZOPC0043 = data().deepCopy(fields()[19].schema(), other._BIC_ZOPC0043);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.VENDOR)) {
        this.VENDOR = data().deepCopy(fields()[20].schema(), other.VENDOR);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other._BIC_ZMMC0003)) {
        this._BIC_ZMMC0003 = data().deepCopy(fields()[21].schema(), other._BIC_ZMMC0003);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other._BIC_ZPURC004)) {
        this._BIC_ZPURC004 = data().deepCopy(fields()[22].schema(), other._BIC_ZPURC004);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other._BIC_ZMMC0005)) {
        this._BIC_ZMMC0005 = data().deepCopy(fields()[23].schema(), other._BIC_ZMMC0005);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.TAX_AMOUNT)) {
        this.TAX_AMOUNT = data().deepCopy(fields()[24].schema(), other.TAX_AMOUNT);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.DOC_CURRCY)) {
        this.DOC_CURRCY = data().deepCopy(fields()[25].schema(), other.DOC_CURRCY);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.COST)) {
        this.COST = data().deepCopy(fields()[26].schema(), other.COST);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.CSHDSC_BAS)) {
        this.CSHDSC_BAS = data().deepCopy(fields()[27].schema(), other.CSHDSC_BAS);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.DENOMINTR)) {
        this.DENOMINTR = data().deepCopy(fields()[28].schema(), other.DENOMINTR);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.EXCHG_RATE)) {
        this.EXCHG_RATE = data().deepCopy(fields()[29].schema(), other.EXCHG_RATE);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.EXCHG_STAT)) {
        this.EXCHG_STAT = data().deepCopy(fields()[30].schema(), other.EXCHG_STAT);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.EXRATEXACC)) {
        this.EXRATEXACC = data().deepCopy(fields()[31].schema(), other.EXRATEXACC);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.EXRATE_ACC)) {
        this.EXRATE_ACC = data().deepCopy(fields()[32].schema(), other.EXRATE_ACC);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.GROSS_VAL)) {
        this.GROSS_VAL = data().deepCopy(fields()[33].schema(), other.GROSS_VAL);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.GRS_WGT_DL)) {
        this.GRS_WGT_DL = data().deepCopy(fields()[34].schema(), other.GRS_WGT_DL);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.INV_QTY)) {
        this.INV_QTY = data().deepCopy(fields()[35].schema(), other.INV_QTY);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.UNIT_OF_WT)) {
        this.UNIT_OF_WT = data().deepCopy(fields()[36].schema(), other.UNIT_OF_WT);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.SALES_UNIT)) {
        this.SALES_UNIT = data().deepCopy(fields()[37].schema(), other.SALES_UNIT);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.NETVAL_INV)) {
        this.NETVAL_INV = data().deepCopy(fields()[38].schema(), other.NETVAL_INV);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.NET_WGT_DL)) {
        this.NET_WGT_DL = data().deepCopy(fields()[39].schema(), other.NET_WGT_DL);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.NO_INV_IT)) {
        this.NO_INV_IT = data().deepCopy(fields()[40].schema(), other.NO_INV_IT);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.NUMERATOR)) {
        this.NUMERATOR = data().deepCopy(fields()[41].schema(), other.NUMERATOR);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.REQ_QTY)) {
        this.REQ_QTY = data().deepCopy(fields()[42].schema(), other.REQ_QTY);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.BASE_UOM)) {
        this.BASE_UOM = data().deepCopy(fields()[43].schema(), other.BASE_UOM);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.SCALE_QTY)) {
        this.SCALE_QTY = data().deepCopy(fields()[44].schema(), other.SCALE_QTY);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.SUBTOTAL_1)) {
        this.SUBTOTAL_1 = data().deepCopy(fields()[45].schema(), other.SUBTOTAL_1);
        fieldSetFlags()[45] = true;
      }
      if (isValidValue(fields()[46], other.SUBTOTAL_2)) {
        this.SUBTOTAL_2 = data().deepCopy(fields()[46].schema(), other.SUBTOTAL_2);
        fieldSetFlags()[46] = true;
      }
      if (isValidValue(fields()[47], other.SUBTOTAL_3)) {
        this.SUBTOTAL_3 = data().deepCopy(fields()[47].schema(), other.SUBTOTAL_3);
        fieldSetFlags()[47] = true;
      }
      if (isValidValue(fields()[48], other.SUBTOTAL_4)) {
        this.SUBTOTAL_4 = data().deepCopy(fields()[48].schema(), other.SUBTOTAL_4);
        fieldSetFlags()[48] = true;
      }
      if (isValidValue(fields()[49], other.SUBTOTAL_5)) {
        this.SUBTOTAL_5 = data().deepCopy(fields()[49].schema(), other.SUBTOTAL_5);
        fieldSetFlags()[49] = true;
      }
      if (isValidValue(fields()[50], other.SUBTOTAL_6)) {
        this.SUBTOTAL_6 = data().deepCopy(fields()[50].schema(), other.SUBTOTAL_6);
        fieldSetFlags()[50] = true;
      }
      if (isValidValue(fields()[51], other._BIC_ZOPK0021)) {
        this._BIC_ZOPK0021 = data().deepCopy(fields()[51].schema(), other._BIC_ZOPK0021);
        fieldSetFlags()[51] = true;
      }
      if (isValidValue(fields()[52], other._BIC_ZOPK0053)) {
        this._BIC_ZOPK0053 = data().deepCopy(fields()[52].schema(), other._BIC_ZOPK0053);
        fieldSetFlags()[52] = true;
      }
      if (isValidValue(fields()[53], other._BIC_ZOPK0054)) {
        this._BIC_ZOPK0054 = data().deepCopy(fields()[53].schema(), other._BIC_ZOPK0054);
        fieldSetFlags()[53] = true;
      }
      if (isValidValue(fields()[54], other._BIC_ZOPK0055)) {
        this._BIC_ZOPK0055 = data().deepCopy(fields()[54].schema(), other._BIC_ZOPK0055);
        fieldSetFlags()[54] = true;
      }
      if (isValidValue(fields()[55], other._BIC_ZPRICE11)) {
        this._BIC_ZPRICE11 = data().deepCopy(fields()[55].schema(), other._BIC_ZPRICE11);
        fieldSetFlags()[55] = true;
      }
      if (isValidValue(fields()[56], other._BIC_ZPRICE12)) {
        this._BIC_ZPRICE12 = data().deepCopy(fields()[56].schema(), other._BIC_ZPRICE12);
        fieldSetFlags()[56] = true;
      }
      if (isValidValue(fields()[57], other.CURRENCY)) {
        this.CURRENCY = data().deepCopy(fields()[57].schema(), other.CURRENCY);
        fieldSetFlags()[57] = true;
      }
      if (isValidValue(fields()[58], other._BIC_ZOPK0145)) {
        this._BIC_ZOPK0145 = data().deepCopy(fields()[58].schema(), other._BIC_ZOPK0145);
        fieldSetFlags()[58] = true;
      }
      if (isValidValue(fields()[59], other.AMOUNT)) {
        this.AMOUNT = data().deepCopy(fields()[59].schema(), other.AMOUNT);
        fieldSetFlags()[59] = true;
      }
      if (isValidValue(fields()[60], other._BIC_ZOPK0048)) {
        this._BIC_ZOPK0048 = data().deepCopy(fields()[60].schema(), other._BIC_ZOPK0048);
        fieldSetFlags()[60] = true;
      }
      if (isValidValue(fields()[61], other._BIC_ZOPK0049)) {
        this._BIC_ZOPK0049 = data().deepCopy(fields()[61].schema(), other._BIC_ZOPK0049);
        fieldSetFlags()[61] = true;
      }
      if (isValidValue(fields()[62], other.RT_TAXCODE)) {
        this.RT_TAXCODE = data().deepCopy(fields()[62].schema(), other.RT_TAXCODE);
        fieldSetFlags()[62] = true;
      }
      if (isValidValue(fields()[63], other._BIC_ZOPK0047)) {
        this._BIC_ZOPK0047 = data().deepCopy(fields()[63].schema(), other._BIC_ZOPK0047);
        fieldSetFlags()[63] = true;
      }
      if (isValidValue(fields()[64], other._BIC_ZOPC0055)) {
        this._BIC_ZOPC0055 = data().deepCopy(fields()[64].schema(), other._BIC_ZOPC0055);
        fieldSetFlags()[64] = true;
      }
    }

    /** Gets the value of the 'CALMONTH' field */
    public CharSequence getCALMONTH() {
      return CALMONTH;
    }
    
    /** Sets the value of the 'CALMONTH' field */
    public Builder setCALMONTH(CharSequence value) {
      validate(fields()[0], value);
      this.CALMONTH = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'CALMONTH' field has been set */
    public boolean hasCALMONTH() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'CALMONTH' field */
    public Builder clearCALMONTH() {
      CALMONTH = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'CALDAY' field */
    public CharSequence getCALDAY() {
      return CALDAY;
    }
    
    /** Sets the value of the 'CALDAY' field */
    public Builder setCALDAY(CharSequence value) {
      validate(fields()[1], value);
      this.CALDAY = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'CALDAY' field has been set */
    public boolean hasCALDAY() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'CALDAY' field */
    public Builder clearCALDAY() {
      CALDAY = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'MATERIAL' field */
    public CharSequence getMATERIAL() {
      return MATERIAL;
    }
    
    /** Sets the value of the 'MATERIAL' field */
    public Builder setMATERIAL(CharSequence value) {
      validate(fields()[2], value);
      this.MATERIAL = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'MATERIAL' field has been set */
    public boolean hasMATERIAL() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'MATERIAL' field */
    public Builder clearMATERIAL() {
      MATERIAL = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'EANUPC' field */
    public CharSequence getEANUPC() {
      return EANUPC;
    }
    
    /** Sets the value of the 'EANUPC' field */
    public Builder setEANUPC(CharSequence value) {
      validate(fields()[3], value);
      this.EANUPC = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'EANUPC' field has been set */
    public boolean hasEANUPC() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'EANUPC' field */
    public Builder clearEANUPC() {
      EANUPC = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'PLANT' field */
    public CharSequence getPLANT() {
      return PLANT;
    }
    
    /** Sets the value of the 'PLANT' field */
    public Builder setPLANT(CharSequence value) {
      validate(fields()[4], value);
      this.PLANT = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'PLANT' field has been set */
    public boolean hasPLANT() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'PLANT' field */
    public Builder clearPLANT() {
      PLANT = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'BILL_TYPE' field */
    public CharSequence getBILLTYPE() {
      return BILL_TYPE;
    }
    
    /** Sets the value of the 'BILL_TYPE' field */
    public Builder setBILLTYPE(CharSequence value) {
      validate(fields()[5], value);
      this.BILL_TYPE = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'BILL_TYPE' field has been set */
    public boolean hasBILLTYPE() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'BILL_TYPE' field */
    public Builder clearBILLTYPE() {
      BILL_TYPE = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'STOR_LOC' field */
    public CharSequence getSTORLOC() {
      return STOR_LOC;
    }
    
    /** Sets the value of the 'STOR_LOC' field */
    public Builder setSTORLOC(CharSequence value) {
      validate(fields()[6], value);
      this.STOR_LOC = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'STOR_LOC' field has been set */
    public boolean hasSTORLOC() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'STOR_LOC' field */
    public Builder clearSTORLOC() {
      STOR_LOC = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'DISTR_CHAN' field */
    public CharSequence getDISTRCHAN() {
      return DISTR_CHAN;
    }
    
    /** Sets the value of the 'DISTR_CHAN' field */
    public Builder setDISTRCHAN(CharSequence value) {
      validate(fields()[7], value);
      this.DISTR_CHAN = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'DISTR_CHAN' field has been set */
    public boolean hasDISTRCHAN() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'DISTR_CHAN' field */
    public Builder clearDISTRCHAN() {
      DISTR_CHAN = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'SOLD_TO' field */
    public CharSequence getSOLDTO() {
      return SOLD_TO;
    }
    
    /** Sets the value of the 'SOLD_TO' field */
    public Builder setSOLDTO(CharSequence value) {
      validate(fields()[8], value);
      this.SOLD_TO = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'SOLD_TO' field has been set */
    public boolean hasSOLDTO() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'SOLD_TO' field */
    public Builder clearSOLDTO() {
      SOLD_TO = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'RT_PROMO' field */
    public CharSequence getRTPROMO() {
      return RT_PROMO;
    }
    
    /** Sets the value of the 'RT_PROMO' field */
    public Builder setRTPROMO(CharSequence value) {
      validate(fields()[9], value);
      this.RT_PROMO = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'RT_PROMO' field has been set */
    public boolean hasRTPROMO() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'RT_PROMO' field */
    public Builder clearRTPROMO() {
      RT_PROMO = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'CUST_GROUP' field */
    public CharSequence getCUSTGROUP() {
      return CUST_GROUP;
    }
    
    /** Sets the value of the 'CUST_GROUP' field */
    public Builder setCUSTGROUP(CharSequence value) {
      validate(fields()[10], value);
      this.CUST_GROUP = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'CUST_GROUP' field has been set */
    public boolean hasCUSTGROUP() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'CUST_GROUP' field */
    public Builder clearCUSTGROUP() {
      CUST_GROUP = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the '_BIC_ZOPC0104' field */
    public CharSequence getBICZOPC0104$1() {
      return _BIC_ZOPC0104;
    }
    
    /** Sets the value of the '_BIC_ZOPC0104' field */
    public Builder setBICZOPC0104$1(CharSequence value) {
      validate(fields()[11], value);
      this._BIC_ZOPC0104 = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the '_BIC_ZOPC0104' field has been set */
    public boolean hasBICZOPC0104$1() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the '_BIC_ZOPC0104' field */
    public Builder clearBICZOPC0104$1() {
      _BIC_ZOPC0104 = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the '_BIC_ZOPC0513' field */
    public CharSequence getBICZOPC0513$1() {
      return _BIC_ZOPC0513;
    }
    
    /** Sets the value of the '_BIC_ZOPC0513' field */
    public Builder setBICZOPC0513$1(CharSequence value) {
      validate(fields()[12], value);
      this._BIC_ZOPC0513 = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the '_BIC_ZOPC0513' field has been set */
    public boolean hasBICZOPC0513$1() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the '_BIC_ZOPC0513' field */
    public Builder clearBICZOPC0513$1() {
      _BIC_ZOPC0513 = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'RECORDMODE' field */
    public CharSequence getRECORDMODE() {
      return RECORDMODE;
    }
    
    /** Sets the value of the 'RECORDMODE' field */
    public Builder setRECORDMODE(CharSequence value) {
      validate(fields()[13], value);
      this.RECORDMODE = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'RECORDMODE' field has been set */
    public boolean hasRECORDMODE() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'RECORDMODE' field */
    public Builder clearRECORDMODE() {
      RECORDMODE = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'MAT_PLANT' field */
    public CharSequence getMATPLANT() {
      return MAT_PLANT;
    }
    
    /** Sets the value of the 'MAT_PLANT' field */
    public Builder setMATPLANT(CharSequence value) {
      validate(fields()[14], value);
      this.MAT_PLANT = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'MAT_PLANT' field has been set */
    public boolean hasMATPLANT() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'MAT_PLANT' field */
    public Builder clearMATPLANT() {
      MAT_PLANT = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /** Gets the value of the 'SALES_DIST' field */
    public CharSequence getSALESDIST() {
      return SALES_DIST;
    }
    
    /** Sets the value of the 'SALES_DIST' field */
    public Builder setSALESDIST(CharSequence value) {
      validate(fields()[15], value);
      this.SALES_DIST = value;
      fieldSetFlags()[15] = true;
      return this; 
    }
    
    /** Checks whether the 'SALES_DIST' field has been set */
    public boolean hasSALESDIST() {
      return fieldSetFlags()[15];
    }
    
    /** Clears the value of the 'SALES_DIST' field */
    public Builder clearSALESDIST() {
      SALES_DIST = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /** Gets the value of the '_BIC_ZOPC0006' field */
    public CharSequence getBICZOPC0006$1() {
      return _BIC_ZOPC0006;
    }
    
    /** Sets the value of the '_BIC_ZOPC0006' field */
    public Builder setBICZOPC0006$1(CharSequence value) {
      validate(fields()[16], value);
      this._BIC_ZOPC0006 = value;
      fieldSetFlags()[16] = true;
      return this; 
    }
    
    /** Checks whether the '_BIC_ZOPC0006' field has been set */
    public boolean hasBICZOPC0006$1() {
      return fieldSetFlags()[16];
    }
    
    /** Clears the value of the '_BIC_ZOPC0006' field */
    public Builder clearBICZOPC0006$1() {
      _BIC_ZOPC0006 = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /** Gets the value of the '_BIC_ZOPC0041' field */
    public CharSequence getBICZOPC0041$1() {
      return _BIC_ZOPC0041;
    }
    
    /** Sets the value of the '_BIC_ZOPC0041' field */
    public Builder setBICZOPC0041$1(CharSequence value) {
      validate(fields()[17], value);
      this._BIC_ZOPC0041 = value;
      fieldSetFlags()[17] = true;
      return this; 
    }
    
    /** Checks whether the '_BIC_ZOPC0041' field has been set */
    public boolean hasBICZOPC0041$1() {
      return fieldSetFlags()[17];
    }
    
    /** Clears the value of the '_BIC_ZOPC0041' field */
    public Builder clearBICZOPC0041$1() {
      _BIC_ZOPC0041 = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /** Gets the value of the '_BIC_ZOPC0042' field */
    public CharSequence getBICZOPC0042$1() {
      return _BIC_ZOPC0042;
    }
    
    /** Sets the value of the '_BIC_ZOPC0042' field */
    public Builder setBICZOPC0042$1(CharSequence value) {
      validate(fields()[18], value);
      this._BIC_ZOPC0042 = value;
      fieldSetFlags()[18] = true;
      return this; 
    }
    
    /** Checks whether the '_BIC_ZOPC0042' field has been set */
    public boolean hasBICZOPC0042$1() {
      return fieldSetFlags()[18];
    }
    
    /** Clears the value of the '_BIC_ZOPC0042' field */
    public Builder clearBICZOPC0042$1() {
      _BIC_ZOPC0042 = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /** Gets the value of the '_BIC_ZOPC0043' field */
    public CharSequence getBICZOPC0043$1() {
      return _BIC_ZOPC0043;
    }
    
    /** Sets the value of the '_BIC_ZOPC0043' field */
    public Builder setBICZOPC0043$1(CharSequence value) {
      validate(fields()[19], value);
      this._BIC_ZOPC0043 = value;
      fieldSetFlags()[19] = true;
      return this; 
    }
    
    /** Checks whether the '_BIC_ZOPC0043' field has been set */
    public boolean hasBICZOPC0043$1() {
      return fieldSetFlags()[19];
    }
    
    /** Clears the value of the '_BIC_ZOPC0043' field */
    public Builder clearBICZOPC0043$1() {
      _BIC_ZOPC0043 = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /** Gets the value of the 'VENDOR' field */
    public CharSequence getVENDOR() {
      return VENDOR;
    }
    
    /** Sets the value of the 'VENDOR' field */
    public Builder setVENDOR(CharSequence value) {
      validate(fields()[20], value);
      this.VENDOR = value;
      fieldSetFlags()[20] = true;
      return this; 
    }
    
    /** Checks whether the 'VENDOR' field has been set */
    public boolean hasVENDOR() {
      return fieldSetFlags()[20];
    }
    
    /** Clears the value of the 'VENDOR' field */
    public Builder clearVENDOR() {
      VENDOR = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /** Gets the value of the '_BIC_ZMMC0003' field */
    public CharSequence getBICZMMC0003$1() {
      return _BIC_ZMMC0003;
    }
    
    /** Sets the value of the '_BIC_ZMMC0003' field */
    public Builder setBICZMMC0003$1(CharSequence value) {
      validate(fields()[21], value);
      this._BIC_ZMMC0003 = value;
      fieldSetFlags()[21] = true;
      return this; 
    }
    
    /** Checks whether the '_BIC_ZMMC0003' field has been set */
    public boolean hasBICZMMC0003$1() {
      return fieldSetFlags()[21];
    }
    
    /** Clears the value of the '_BIC_ZMMC0003' field */
    public Builder clearBICZMMC0003$1() {
      _BIC_ZMMC0003 = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /** Gets the value of the '_BIC_ZPURC004' field */
    public CharSequence getBICZPURC004$1() {
      return _BIC_ZPURC004;
    }
    
    /** Sets the value of the '_BIC_ZPURC004' field */
    public Builder setBICZPURC004$1(CharSequence value) {
      validate(fields()[22], value);
      this._BIC_ZPURC004 = value;
      fieldSetFlags()[22] = true;
      return this; 
    }
    
    /** Checks whether the '_BIC_ZPURC004' field has been set */
    public boolean hasBICZPURC004$1() {
      return fieldSetFlags()[22];
    }
    
    /** Clears the value of the '_BIC_ZPURC004' field */
    public Builder clearBICZPURC004$1() {
      _BIC_ZPURC004 = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /** Gets the value of the '_BIC_ZMMC0005' field */
    public CharSequence getBICZMMC0005$1() {
      return _BIC_ZMMC0005;
    }
    
    /** Sets the value of the '_BIC_ZMMC0005' field */
    public Builder setBICZMMC0005$1(CharSequence value) {
      validate(fields()[23], value);
      this._BIC_ZMMC0005 = value;
      fieldSetFlags()[23] = true;
      return this; 
    }
    
    /** Checks whether the '_BIC_ZMMC0005' field has been set */
    public boolean hasBICZMMC0005$1() {
      return fieldSetFlags()[23];
    }
    
    /** Clears the value of the '_BIC_ZMMC0005' field */
    public Builder clearBICZMMC0005$1() {
      _BIC_ZMMC0005 = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /** Gets the value of the 'TAX_AMOUNT' field */
    public CharSequence getTAXAMOUNT() {
      return TAX_AMOUNT;
    }
    
    /** Sets the value of the 'TAX_AMOUNT' field */
    public Builder setTAXAMOUNT(CharSequence value) {
      validate(fields()[24], value);
      this.TAX_AMOUNT = value;
      fieldSetFlags()[24] = true;
      return this; 
    }
    
    /** Checks whether the 'TAX_AMOUNT' field has been set */
    public boolean hasTAXAMOUNT() {
      return fieldSetFlags()[24];
    }
    
    /** Clears the value of the 'TAX_AMOUNT' field */
    public Builder clearTAXAMOUNT() {
      TAX_AMOUNT = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /** Gets the value of the 'DOC_CURRCY' field */
    public CharSequence getDOCCURRCY() {
      return DOC_CURRCY;
    }
    
    /** Sets the value of the 'DOC_CURRCY' field */
    public Builder setDOCCURRCY(CharSequence value) {
      validate(fields()[25], value);
      this.DOC_CURRCY = value;
      fieldSetFlags()[25] = true;
      return this; 
    }
    
    /** Checks whether the 'DOC_CURRCY' field has been set */
    public boolean hasDOCCURRCY() {
      return fieldSetFlags()[25];
    }
    
    /** Clears the value of the 'DOC_CURRCY' field */
    public Builder clearDOCCURRCY() {
      DOC_CURRCY = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /** Gets the value of the 'COST' field */
    public CharSequence getCOST() {
      return COST;
    }
    
    /** Sets the value of the 'COST' field */
    public Builder setCOST(CharSequence value) {
      validate(fields()[26], value);
      this.COST = value;
      fieldSetFlags()[26] = true;
      return this; 
    }
    
    /** Checks whether the 'COST' field has been set */
    public boolean hasCOST() {
      return fieldSetFlags()[26];
    }
    
    /** Clears the value of the 'COST' field */
    public Builder clearCOST() {
      COST = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /** Gets the value of the 'CSHDSC_BAS' field */
    public CharSequence getCSHDSCBAS() {
      return CSHDSC_BAS;
    }
    
    /** Sets the value of the 'CSHDSC_BAS' field */
    public Builder setCSHDSCBAS(CharSequence value) {
      validate(fields()[27], value);
      this.CSHDSC_BAS = value;
      fieldSetFlags()[27] = true;
      return this; 
    }
    
    /** Checks whether the 'CSHDSC_BAS' field has been set */
    public boolean hasCSHDSCBAS() {
      return fieldSetFlags()[27];
    }
    
    /** Clears the value of the 'CSHDSC_BAS' field */
    public Builder clearCSHDSCBAS() {
      CSHDSC_BAS = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /** Gets the value of the 'DENOMINTR' field */
    public CharSequence getDENOMINTR() {
      return DENOMINTR;
    }
    
    /** Sets the value of the 'DENOMINTR' field */
    public Builder setDENOMINTR(CharSequence value) {
      validate(fields()[28], value);
      this.DENOMINTR = value;
      fieldSetFlags()[28] = true;
      return this; 
    }
    
    /** Checks whether the 'DENOMINTR' field has been set */
    public boolean hasDENOMINTR() {
      return fieldSetFlags()[28];
    }
    
    /** Clears the value of the 'DENOMINTR' field */
    public Builder clearDENOMINTR() {
      DENOMINTR = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /** Gets the value of the 'EXCHG_RATE' field */
    public Double getEXCHGRATE() {
      return EXCHG_RATE;
    }
    
    /** Sets the value of the 'EXCHG_RATE' field */
    public Builder setEXCHGRATE(Double value) {
      validate(fields()[29], value);
      this.EXCHG_RATE = value;
      fieldSetFlags()[29] = true;
      return this; 
    }
    
    /** Checks whether the 'EXCHG_RATE' field has been set */
    public boolean hasEXCHGRATE() {
      return fieldSetFlags()[29];
    }
    
    /** Clears the value of the 'EXCHG_RATE' field */
    public Builder clearEXCHGRATE() {
      EXCHG_RATE = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /** Gets the value of the 'EXCHG_STAT' field */
    public Double getEXCHGSTAT() {
      return EXCHG_STAT;
    }
    
    /** Sets the value of the 'EXCHG_STAT' field */
    public Builder setEXCHGSTAT(Double value) {
      validate(fields()[30], value);
      this.EXCHG_STAT = value;
      fieldSetFlags()[30] = true;
      return this; 
    }
    
    /** Checks whether the 'EXCHG_STAT' field has been set */
    public boolean hasEXCHGSTAT() {
      return fieldSetFlags()[30];
    }
    
    /** Clears the value of the 'EXCHG_STAT' field */
    public Builder clearEXCHGSTAT() {
      EXCHG_STAT = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /** Gets the value of the 'EXRATEXACC' field */
    public Double getEXRATEXACC() {
      return EXRATEXACC;
    }
    
    /** Sets the value of the 'EXRATEXACC' field */
    public Builder setEXRATEXACC(Double value) {
      validate(fields()[31], value);
      this.EXRATEXACC = value;
      fieldSetFlags()[31] = true;
      return this; 
    }
    
    /** Checks whether the 'EXRATEXACC' field has been set */
    public boolean hasEXRATEXACC() {
      return fieldSetFlags()[31];
    }
    
    /** Clears the value of the 'EXRATEXACC' field */
    public Builder clearEXRATEXACC() {
      EXRATEXACC = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /** Gets the value of the 'EXRATE_ACC' field */
    public CharSequence getEXRATEACC() {
      return EXRATE_ACC;
    }
    
    /** Sets the value of the 'EXRATE_ACC' field */
    public Builder setEXRATEACC(CharSequence value) {
      validate(fields()[32], value);
      this.EXRATE_ACC = value;
      fieldSetFlags()[32] = true;
      return this; 
    }
    
    /** Checks whether the 'EXRATE_ACC' field has been set */
    public boolean hasEXRATEACC() {
      return fieldSetFlags()[32];
    }
    
    /** Clears the value of the 'EXRATE_ACC' field */
    public Builder clearEXRATEACC() {
      EXRATE_ACC = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    /** Gets the value of the 'GROSS_VAL' field */
    public CharSequence getGROSSVAL() {
      return GROSS_VAL;
    }
    
    /** Sets the value of the 'GROSS_VAL' field */
    public Builder setGROSSVAL(CharSequence value) {
      validate(fields()[33], value);
      this.GROSS_VAL = value;
      fieldSetFlags()[33] = true;
      return this; 
    }
    
    /** Checks whether the 'GROSS_VAL' field has been set */
    public boolean hasGROSSVAL() {
      return fieldSetFlags()[33];
    }
    
    /** Clears the value of the 'GROSS_VAL' field */
    public Builder clearGROSSVAL() {
      GROSS_VAL = null;
      fieldSetFlags()[33] = false;
      return this;
    }

    /** Gets the value of the 'GRS_WGT_DL' field */
    public CharSequence getGRSWGTDL() {
      return GRS_WGT_DL;
    }
    
    /** Sets the value of the 'GRS_WGT_DL' field */
    public Builder setGRSWGTDL(CharSequence value) {
      validate(fields()[34], value);
      this.GRS_WGT_DL = value;
      fieldSetFlags()[34] = true;
      return this; 
    }
    
    /** Checks whether the 'GRS_WGT_DL' field has been set */
    public boolean hasGRSWGTDL() {
      return fieldSetFlags()[34];
    }
    
    /** Clears the value of the 'GRS_WGT_DL' field */
    public Builder clearGRSWGTDL() {
      GRS_WGT_DL = null;
      fieldSetFlags()[34] = false;
      return this;
    }

    /** Gets the value of the 'INV_QTY' field */
    public CharSequence getINVQTY() {
      return INV_QTY;
    }
    
    /** Sets the value of the 'INV_QTY' field */
    public Builder setINVQTY(CharSequence value) {
      validate(fields()[35], value);
      this.INV_QTY = value;
      fieldSetFlags()[35] = true;
      return this; 
    }
    
    /** Checks whether the 'INV_QTY' field has been set */
    public boolean hasINVQTY() {
      return fieldSetFlags()[35];
    }
    
    /** Clears the value of the 'INV_QTY' field */
    public Builder clearINVQTY() {
      INV_QTY = null;
      fieldSetFlags()[35] = false;
      return this;
    }

    /** Gets the value of the 'UNIT_OF_WT' field */
    public CharSequence getUNITOFWT() {
      return UNIT_OF_WT;
    }
    
    /** Sets the value of the 'UNIT_OF_WT' field */
    public Builder setUNITOFWT(CharSequence value) {
      validate(fields()[36], value);
      this.UNIT_OF_WT = value;
      fieldSetFlags()[36] = true;
      return this; 
    }
    
    /** Checks whether the 'UNIT_OF_WT' field has been set */
    public boolean hasUNITOFWT() {
      return fieldSetFlags()[36];
    }
    
    /** Clears the value of the 'UNIT_OF_WT' field */
    public Builder clearUNITOFWT() {
      UNIT_OF_WT = null;
      fieldSetFlags()[36] = false;
      return this;
    }

    /** Gets the value of the 'SALES_UNIT' field */
    public CharSequence getSALESUNIT() {
      return SALES_UNIT;
    }
    
    /** Sets the value of the 'SALES_UNIT' field */
    public Builder setSALESUNIT(CharSequence value) {
      validate(fields()[37], value);
      this.SALES_UNIT = value;
      fieldSetFlags()[37] = true;
      return this; 
    }
    
    /** Checks whether the 'SALES_UNIT' field has been set */
    public boolean hasSALESUNIT() {
      return fieldSetFlags()[37];
    }
    
    /** Clears the value of the 'SALES_UNIT' field */
    public Builder clearSALESUNIT() {
      SALES_UNIT = null;
      fieldSetFlags()[37] = false;
      return this;
    }

    /** Gets the value of the 'NETVAL_INV' field */
    public CharSequence getNETVALINV() {
      return NETVAL_INV;
    }
    
    /** Sets the value of the 'NETVAL_INV' field */
    public Builder setNETVALINV(CharSequence value) {
      validate(fields()[38], value);
      this.NETVAL_INV = value;
      fieldSetFlags()[38] = true;
      return this; 
    }
    
    /** Checks whether the 'NETVAL_INV' field has been set */
    public boolean hasNETVALINV() {
      return fieldSetFlags()[38];
    }
    
    /** Clears the value of the 'NETVAL_INV' field */
    public Builder clearNETVALINV() {
      NETVAL_INV = null;
      fieldSetFlags()[38] = false;
      return this;
    }

    /** Gets the value of the 'NET_WGT_DL' field */
    public CharSequence getNETWGTDL() {
      return NET_WGT_DL;
    }
    
    /** Sets the value of the 'NET_WGT_DL' field */
    public Builder setNETWGTDL(CharSequence value) {
      validate(fields()[39], value);
      this.NET_WGT_DL = value;
      fieldSetFlags()[39] = true;
      return this; 
    }
    
    /** Checks whether the 'NET_WGT_DL' field has been set */
    public boolean hasNETWGTDL() {
      return fieldSetFlags()[39];
    }
    
    /** Clears the value of the 'NET_WGT_DL' field */
    public Builder clearNETWGTDL() {
      NET_WGT_DL = null;
      fieldSetFlags()[39] = false;
      return this;
    }

    /** Gets the value of the 'NO_INV_IT' field */
    public CharSequence getNOINVIT() {
      return NO_INV_IT;
    }
    
    /** Sets the value of the 'NO_INV_IT' field */
    public Builder setNOINVIT(CharSequence value) {
      validate(fields()[40], value);
      this.NO_INV_IT = value;
      fieldSetFlags()[40] = true;
      return this; 
    }
    
    /** Checks whether the 'NO_INV_IT' field has been set */
    public boolean hasNOINVIT() {
      return fieldSetFlags()[40];
    }
    
    /** Clears the value of the 'NO_INV_IT' field */
    public Builder clearNOINVIT() {
      NO_INV_IT = null;
      fieldSetFlags()[40] = false;
      return this;
    }

    /** Gets the value of the 'NUMERATOR' field */
    public CharSequence getNUMERATOR() {
      return NUMERATOR;
    }
    
    /** Sets the value of the 'NUMERATOR' field */
    public Builder setNUMERATOR(CharSequence value) {
      validate(fields()[41], value);
      this.NUMERATOR = value;
      fieldSetFlags()[41] = true;
      return this; 
    }
    
    /** Checks whether the 'NUMERATOR' field has been set */
    public boolean hasNUMERATOR() {
      return fieldSetFlags()[41];
    }
    
    /** Clears the value of the 'NUMERATOR' field */
    public Builder clearNUMERATOR() {
      NUMERATOR = null;
      fieldSetFlags()[41] = false;
      return this;
    }

    /** Gets the value of the 'REQ_QTY' field */
    public CharSequence getREQQTY() {
      return REQ_QTY;
    }
    
    /** Sets the value of the 'REQ_QTY' field */
    public Builder setREQQTY(CharSequence value) {
      validate(fields()[42], value);
      this.REQ_QTY = value;
      fieldSetFlags()[42] = true;
      return this; 
    }
    
    /** Checks whether the 'REQ_QTY' field has been set */
    public boolean hasREQQTY() {
      return fieldSetFlags()[42];
    }
    
    /** Clears the value of the 'REQ_QTY' field */
    public Builder clearREQQTY() {
      REQ_QTY = null;
      fieldSetFlags()[42] = false;
      return this;
    }

    /** Gets the value of the 'BASE_UOM' field */
    public CharSequence getBASEUOM() {
      return BASE_UOM;
    }
    
    /** Sets the value of the 'BASE_UOM' field */
    public Builder setBASEUOM(CharSequence value) {
      validate(fields()[43], value);
      this.BASE_UOM = value;
      fieldSetFlags()[43] = true;
      return this; 
    }
    
    /** Checks whether the 'BASE_UOM' field has been set */
    public boolean hasBASEUOM() {
      return fieldSetFlags()[43];
    }
    
    /** Clears the value of the 'BASE_UOM' field */
    public Builder clearBASEUOM() {
      BASE_UOM = null;
      fieldSetFlags()[43] = false;
      return this;
    }

    /** Gets the value of the 'SCALE_QTY' field */
    public CharSequence getSCALEQTY() {
      return SCALE_QTY;
    }
    
    /** Sets the value of the 'SCALE_QTY' field */
    public Builder setSCALEQTY(CharSequence value) {
      validate(fields()[44], value);
      this.SCALE_QTY = value;
      fieldSetFlags()[44] = true;
      return this; 
    }
    
    /** Checks whether the 'SCALE_QTY' field has been set */
    public boolean hasSCALEQTY() {
      return fieldSetFlags()[44];
    }
    
    /** Clears the value of the 'SCALE_QTY' field */
    public Builder clearSCALEQTY() {
      SCALE_QTY = null;
      fieldSetFlags()[44] = false;
      return this;
    }

    /** Gets the value of the 'SUBTOTAL_1' field */
    public CharSequence getSUBTOTAL1() {
      return SUBTOTAL_1;
    }
    
    /** Sets the value of the 'SUBTOTAL_1' field */
    public Builder setSUBTOTAL1(CharSequence value) {
      validate(fields()[45], value);
      this.SUBTOTAL_1 = value;
      fieldSetFlags()[45] = true;
      return this; 
    }
    
    /** Checks whether the 'SUBTOTAL_1' field has been set */
    public boolean hasSUBTOTAL1() {
      return fieldSetFlags()[45];
    }
    
    /** Clears the value of the 'SUBTOTAL_1' field */
    public Builder clearSUBTOTAL1() {
      SUBTOTAL_1 = null;
      fieldSetFlags()[45] = false;
      return this;
    }

    /** Gets the value of the 'SUBTOTAL_2' field */
    public CharSequence getSUBTOTAL2() {
      return SUBTOTAL_2;
    }
    
    /** Sets the value of the 'SUBTOTAL_2' field */
    public Builder setSUBTOTAL2(CharSequence value) {
      validate(fields()[46], value);
      this.SUBTOTAL_2 = value;
      fieldSetFlags()[46] = true;
      return this; 
    }
    
    /** Checks whether the 'SUBTOTAL_2' field has been set */
    public boolean hasSUBTOTAL2() {
      return fieldSetFlags()[46];
    }
    
    /** Clears the value of the 'SUBTOTAL_2' field */
    public Builder clearSUBTOTAL2() {
      SUBTOTAL_2 = null;
      fieldSetFlags()[46] = false;
      return this;
    }

    /** Gets the value of the 'SUBTOTAL_3' field */
    public CharSequence getSUBTOTAL3() {
      return SUBTOTAL_3;
    }
    
    /** Sets the value of the 'SUBTOTAL_3' field */
    public Builder setSUBTOTAL3(CharSequence value) {
      validate(fields()[47], value);
      this.SUBTOTAL_3 = value;
      fieldSetFlags()[47] = true;
      return this; 
    }
    
    /** Checks whether the 'SUBTOTAL_3' field has been set */
    public boolean hasSUBTOTAL3() {
      return fieldSetFlags()[47];
    }
    
    /** Clears the value of the 'SUBTOTAL_3' field */
    public Builder clearSUBTOTAL3() {
      SUBTOTAL_3 = null;
      fieldSetFlags()[47] = false;
      return this;
    }

    /** Gets the value of the 'SUBTOTAL_4' field */
    public CharSequence getSUBTOTAL4() {
      return SUBTOTAL_4;
    }
    
    /** Sets the value of the 'SUBTOTAL_4' field */
    public Builder setSUBTOTAL4(CharSequence value) {
      validate(fields()[48], value);
      this.SUBTOTAL_4 = value;
      fieldSetFlags()[48] = true;
      return this; 
    }
    
    /** Checks whether the 'SUBTOTAL_4' field has been set */
    public boolean hasSUBTOTAL4() {
      return fieldSetFlags()[48];
    }
    
    /** Clears the value of the 'SUBTOTAL_4' field */
    public Builder clearSUBTOTAL4() {
      SUBTOTAL_4 = null;
      fieldSetFlags()[48] = false;
      return this;
    }

    /** Gets the value of the 'SUBTOTAL_5' field */
    public CharSequence getSUBTOTAL5() {
      return SUBTOTAL_5;
    }
    
    /** Sets the value of the 'SUBTOTAL_5' field */
    public Builder setSUBTOTAL5(CharSequence value) {
      validate(fields()[49], value);
      this.SUBTOTAL_5 = value;
      fieldSetFlags()[49] = true;
      return this; 
    }
    
    /** Checks whether the 'SUBTOTAL_5' field has been set */
    public boolean hasSUBTOTAL5() {
      return fieldSetFlags()[49];
    }
    
    /** Clears the value of the 'SUBTOTAL_5' field */
    public Builder clearSUBTOTAL5() {
      SUBTOTAL_5 = null;
      fieldSetFlags()[49] = false;
      return this;
    }

    /** Gets the value of the 'SUBTOTAL_6' field */
    public CharSequence getSUBTOTAL6() {
      return SUBTOTAL_6;
    }
    
    /** Sets the value of the 'SUBTOTAL_6' field */
    public Builder setSUBTOTAL6(CharSequence value) {
      validate(fields()[50], value);
      this.SUBTOTAL_6 = value;
      fieldSetFlags()[50] = true;
      return this; 
    }
    
    /** Checks whether the 'SUBTOTAL_6' field has been set */
    public boolean hasSUBTOTAL6() {
      return fieldSetFlags()[50];
    }
    
    /** Clears the value of the 'SUBTOTAL_6' field */
    public Builder clearSUBTOTAL6() {
      SUBTOTAL_6 = null;
      fieldSetFlags()[50] = false;
      return this;
    }

    /** Gets the value of the '_BIC_ZOPK0021' field */
    public CharSequence getBICZOPK0021$1() {
      return _BIC_ZOPK0021;
    }
    
    /** Sets the value of the '_BIC_ZOPK0021' field */
    public Builder setBICZOPK0021$1(CharSequence value) {
      validate(fields()[51], value);
      this._BIC_ZOPK0021 = value;
      fieldSetFlags()[51] = true;
      return this; 
    }
    
    /** Checks whether the '_BIC_ZOPK0021' field has been set */
    public boolean hasBICZOPK0021$1() {
      return fieldSetFlags()[51];
    }
    
    /** Clears the value of the '_BIC_ZOPK0021' field */
    public Builder clearBICZOPK0021$1() {
      _BIC_ZOPK0021 = null;
      fieldSetFlags()[51] = false;
      return this;
    }

    /** Gets the value of the '_BIC_ZOPK0053' field */
    public CharSequence getBICZOPK0053$1() {
      return _BIC_ZOPK0053;
    }
    
    /** Sets the value of the '_BIC_ZOPK0053' field */
    public Builder setBICZOPK0053$1(CharSequence value) {
      validate(fields()[52], value);
      this._BIC_ZOPK0053 = value;
      fieldSetFlags()[52] = true;
      return this; 
    }
    
    /** Checks whether the '_BIC_ZOPK0053' field has been set */
    public boolean hasBICZOPK0053$1() {
      return fieldSetFlags()[52];
    }
    
    /** Clears the value of the '_BIC_ZOPK0053' field */
    public Builder clearBICZOPK0053$1() {
      _BIC_ZOPK0053 = null;
      fieldSetFlags()[52] = false;
      return this;
    }

    /** Gets the value of the '_BIC_ZOPK0054' field */
    public CharSequence getBICZOPK0054$1() {
      return _BIC_ZOPK0054;
    }
    
    /** Sets the value of the '_BIC_ZOPK0054' field */
    public Builder setBICZOPK0054$1(CharSequence value) {
      validate(fields()[53], value);
      this._BIC_ZOPK0054 = value;
      fieldSetFlags()[53] = true;
      return this; 
    }
    
    /** Checks whether the '_BIC_ZOPK0054' field has been set */
    public boolean hasBICZOPK0054$1() {
      return fieldSetFlags()[53];
    }
    
    /** Clears the value of the '_BIC_ZOPK0054' field */
    public Builder clearBICZOPK0054$1() {
      _BIC_ZOPK0054 = null;
      fieldSetFlags()[53] = false;
      return this;
    }

    /** Gets the value of the '_BIC_ZOPK0055' field */
    public CharSequence getBICZOPK0055$1() {
      return _BIC_ZOPK0055;
    }
    
    /** Sets the value of the '_BIC_ZOPK0055' field */
    public Builder setBICZOPK0055$1(CharSequence value) {
      validate(fields()[54], value);
      this._BIC_ZOPK0055 = value;
      fieldSetFlags()[54] = true;
      return this; 
    }
    
    /** Checks whether the '_BIC_ZOPK0055' field has been set */
    public boolean hasBICZOPK0055$1() {
      return fieldSetFlags()[54];
    }
    
    /** Clears the value of the '_BIC_ZOPK0055' field */
    public Builder clearBICZOPK0055$1() {
      _BIC_ZOPK0055 = null;
      fieldSetFlags()[54] = false;
      return this;
    }

    /** Gets the value of the '_BIC_ZPRICE11' field */
    public CharSequence getBICZPRICE11$1() {
      return _BIC_ZPRICE11;
    }
    
    /** Sets the value of the '_BIC_ZPRICE11' field */
    public Builder setBICZPRICE11$1(CharSequence value) {
      validate(fields()[55], value);
      this._BIC_ZPRICE11 = value;
      fieldSetFlags()[55] = true;
      return this; 
    }
    
    /** Checks whether the '_BIC_ZPRICE11' field has been set */
    public boolean hasBICZPRICE11$1() {
      return fieldSetFlags()[55];
    }
    
    /** Clears the value of the '_BIC_ZPRICE11' field */
    public Builder clearBICZPRICE11$1() {
      _BIC_ZPRICE11 = null;
      fieldSetFlags()[55] = false;
      return this;
    }

    /** Gets the value of the '_BIC_ZPRICE12' field */
    public CharSequence getBICZPRICE12$1() {
      return _BIC_ZPRICE12;
    }
    
    /** Sets the value of the '_BIC_ZPRICE12' field */
    public Builder setBICZPRICE12$1(CharSequence value) {
      validate(fields()[56], value);
      this._BIC_ZPRICE12 = value;
      fieldSetFlags()[56] = true;
      return this; 
    }
    
    /** Checks whether the '_BIC_ZPRICE12' field has been set */
    public boolean hasBICZPRICE12$1() {
      return fieldSetFlags()[56];
    }
    
    /** Clears the value of the '_BIC_ZPRICE12' field */
    public Builder clearBICZPRICE12$1() {
      _BIC_ZPRICE12 = null;
      fieldSetFlags()[56] = false;
      return this;
    }

    /** Gets the value of the 'CURRENCY' field */
    public CharSequence getCURRENCY() {
      return CURRENCY;
    }
    
    /** Sets the value of the 'CURRENCY' field */
    public Builder setCURRENCY(CharSequence value) {
      validate(fields()[57], value);
      this.CURRENCY = value;
      fieldSetFlags()[57] = true;
      return this; 
    }
    
    /** Checks whether the 'CURRENCY' field has been set */
    public boolean hasCURRENCY() {
      return fieldSetFlags()[57];
    }
    
    /** Clears the value of the 'CURRENCY' field */
    public Builder clearCURRENCY() {
      CURRENCY = null;
      fieldSetFlags()[57] = false;
      return this;
    }

    /** Gets the value of the '_BIC_ZOPK0145' field */
    public CharSequence getBICZOPK0145$1() {
      return _BIC_ZOPK0145;
    }
    
    /** Sets the value of the '_BIC_ZOPK0145' field */
    public Builder setBICZOPK0145$1(CharSequence value) {
      validate(fields()[58], value);
      this._BIC_ZOPK0145 = value;
      fieldSetFlags()[58] = true;
      return this; 
    }
    
    /** Checks whether the '_BIC_ZOPK0145' field has been set */
    public boolean hasBICZOPK0145$1() {
      return fieldSetFlags()[58];
    }
    
    /** Clears the value of the '_BIC_ZOPK0145' field */
    public Builder clearBICZOPK0145$1() {
      _BIC_ZOPK0145 = null;
      fieldSetFlags()[58] = false;
      return this;
    }

    /** Gets the value of the 'AMOUNT' field */
    public CharSequence getAMOUNT() {
      return AMOUNT;
    }
    
    /** Sets the value of the 'AMOUNT' field */
    public Builder setAMOUNT(CharSequence value) {
      validate(fields()[59], value);
      this.AMOUNT = value;
      fieldSetFlags()[59] = true;
      return this; 
    }
    
    /** Checks whether the 'AMOUNT' field has been set */
    public boolean hasAMOUNT() {
      return fieldSetFlags()[59];
    }
    
    /** Clears the value of the 'AMOUNT' field */
    public Builder clearAMOUNT() {
      AMOUNT = null;
      fieldSetFlags()[59] = false;
      return this;
    }

    /** Gets the value of the '_BIC_ZOPK0048' field */
    public CharSequence getBICZOPK0048$1() {
      return _BIC_ZOPK0048;
    }
    
    /** Sets the value of the '_BIC_ZOPK0048' field */
    public Builder setBICZOPK0048$1(CharSequence value) {
      validate(fields()[60], value);
      this._BIC_ZOPK0048 = value;
      fieldSetFlags()[60] = true;
      return this; 
    }
    
    /** Checks whether the '_BIC_ZOPK0048' field has been set */
    public boolean hasBICZOPK0048$1() {
      return fieldSetFlags()[60];
    }
    
    /** Clears the value of the '_BIC_ZOPK0048' field */
    public Builder clearBICZOPK0048$1() {
      _BIC_ZOPK0048 = null;
      fieldSetFlags()[60] = false;
      return this;
    }

    /** Gets the value of the '_BIC_ZOPK0049' field */
    public CharSequence getBICZOPK0049$1() {
      return _BIC_ZOPK0049;
    }
    
    /** Sets the value of the '_BIC_ZOPK0049' field */
    public Builder setBICZOPK0049$1(CharSequence value) {
      validate(fields()[61], value);
      this._BIC_ZOPK0049 = value;
      fieldSetFlags()[61] = true;
      return this; 
    }
    
    /** Checks whether the '_BIC_ZOPK0049' field has been set */
    public boolean hasBICZOPK0049$1() {
      return fieldSetFlags()[61];
    }
    
    /** Clears the value of the '_BIC_ZOPK0049' field */
    public Builder clearBICZOPK0049$1() {
      _BIC_ZOPK0049 = null;
      fieldSetFlags()[61] = false;
      return this;
    }

    /** Gets the value of the 'RT_TAXCODE' field */
    public CharSequence getRTTAXCODE() {
      return RT_TAXCODE;
    }
    
    /** Sets the value of the 'RT_TAXCODE' field */
    public Builder setRTTAXCODE(CharSequence value) {
      validate(fields()[62], value);
      this.RT_TAXCODE = value;
      fieldSetFlags()[62] = true;
      return this; 
    }
    
    /** Checks whether the 'RT_TAXCODE' field has been set */
    public boolean hasRTTAXCODE() {
      return fieldSetFlags()[62];
    }
    
    /** Clears the value of the 'RT_TAXCODE' field */
    public Builder clearRTTAXCODE() {
      RT_TAXCODE = null;
      fieldSetFlags()[62] = false;
      return this;
    }

    /** Gets the value of the '_BIC_ZOPK0047' field */
    public CharSequence getBICZOPK0047$1() {
      return _BIC_ZOPK0047;
    }
    
    /** Sets the value of the '_BIC_ZOPK0047' field */
    public Builder setBICZOPK0047$1(CharSequence value) {
      validate(fields()[63], value);
      this._BIC_ZOPK0047 = value;
      fieldSetFlags()[63] = true;
      return this; 
    }
    
    /** Checks whether the '_BIC_ZOPK0047' field has been set */
    public boolean hasBICZOPK0047$1() {
      return fieldSetFlags()[63];
    }
    
    /** Clears the value of the '_BIC_ZOPK0047' field */
    public Builder clearBICZOPK0047$1() {
      _BIC_ZOPK0047 = null;
      fieldSetFlags()[63] = false;
      return this;
    }

    /** Gets the value of the '_BIC_ZOPC0055' field */
    public CharSequence getBICZOPC0055$1() {
      return _BIC_ZOPC0055;
    }
    
    /** Sets the value of the '_BIC_ZOPC0055' field */
    public Builder setBICZOPC0055$1(CharSequence value) {
      validate(fields()[64], value);
      this._BIC_ZOPC0055 = value;
      fieldSetFlags()[64] = true;
      return this; 
    }
    
    /** Checks whether the '_BIC_ZOPC0055' field has been set */
    public boolean hasBICZOPC0055$1() {
      return fieldSetFlags()[64];
    }
    
    /** Clears the value of the '_BIC_ZOPC0055' field */
    public Builder clearBICZOPC0055$1() {
      _BIC_ZOPC0055 = null;
      fieldSetFlags()[64] = false;
      return this;
    }

    public AutoGeneratedSchema build() {
      try {
        AutoGeneratedSchema record = new AutoGeneratedSchema();
        record.CALMONTH = fieldSetFlags()[0] ? this.CALMONTH : (CharSequence) defaultValue(fields()[0]);
        record.CALDAY = fieldSetFlags()[1] ? this.CALDAY : (CharSequence) defaultValue(fields()[1]);
        record.MATERIAL = fieldSetFlags()[2] ? this.MATERIAL : (CharSequence) defaultValue(fields()[2]);
        record.EANUPC = fieldSetFlags()[3] ? this.EANUPC : (CharSequence) defaultValue(fields()[3]);
        record.PLANT = fieldSetFlags()[4] ? this.PLANT : (CharSequence) defaultValue(fields()[4]);
        record.BILL_TYPE = fieldSetFlags()[5] ? this.BILL_TYPE : (CharSequence) defaultValue(fields()[5]);
        record.STOR_LOC = fieldSetFlags()[6] ? this.STOR_LOC : (CharSequence) defaultValue(fields()[6]);
        record.DISTR_CHAN = fieldSetFlags()[7] ? this.DISTR_CHAN : (CharSequence) defaultValue(fields()[7]);
        record.SOLD_TO = fieldSetFlags()[8] ? this.SOLD_TO : (CharSequence) defaultValue(fields()[8]);
        record.RT_PROMO = fieldSetFlags()[9] ? this.RT_PROMO : (CharSequence) defaultValue(fields()[9]);
        record.CUST_GROUP = fieldSetFlags()[10] ? this.CUST_GROUP : (CharSequence) defaultValue(fields()[10]);
        record._BIC_ZOPC0104 = fieldSetFlags()[11] ? this._BIC_ZOPC0104 : (CharSequence) defaultValue(fields()[11]);
        record._BIC_ZOPC0513 = fieldSetFlags()[12] ? this._BIC_ZOPC0513 : (CharSequence) defaultValue(fields()[12]);
        record.RECORDMODE = fieldSetFlags()[13] ? this.RECORDMODE : (CharSequence) defaultValue(fields()[13]);
        record.MAT_PLANT = fieldSetFlags()[14] ? this.MAT_PLANT : (CharSequence) defaultValue(fields()[14]);
        record.SALES_DIST = fieldSetFlags()[15] ? this.SALES_DIST : (CharSequence) defaultValue(fields()[15]);
        record._BIC_ZOPC0006 = fieldSetFlags()[16] ? this._BIC_ZOPC0006 : (CharSequence) defaultValue(fields()[16]);
        record._BIC_ZOPC0041 = fieldSetFlags()[17] ? this._BIC_ZOPC0041 : (CharSequence) defaultValue(fields()[17]);
        record._BIC_ZOPC0042 = fieldSetFlags()[18] ? this._BIC_ZOPC0042 : (CharSequence) defaultValue(fields()[18]);
        record._BIC_ZOPC0043 = fieldSetFlags()[19] ? this._BIC_ZOPC0043 : (CharSequence) defaultValue(fields()[19]);
        record.VENDOR = fieldSetFlags()[20] ? this.VENDOR : (CharSequence) defaultValue(fields()[20]);
        record._BIC_ZMMC0003 = fieldSetFlags()[21] ? this._BIC_ZMMC0003 : (CharSequence) defaultValue(fields()[21]);
        record._BIC_ZPURC004 = fieldSetFlags()[22] ? this._BIC_ZPURC004 : (CharSequence) defaultValue(fields()[22]);
        record._BIC_ZMMC0005 = fieldSetFlags()[23] ? this._BIC_ZMMC0005 : (CharSequence) defaultValue(fields()[23]);
        record.TAX_AMOUNT = fieldSetFlags()[24] ? this.TAX_AMOUNT : (CharSequence) defaultValue(fields()[24]);
        record.DOC_CURRCY = fieldSetFlags()[25] ? this.DOC_CURRCY : (CharSequence) defaultValue(fields()[25]);
        record.COST = fieldSetFlags()[26] ? this.COST : (CharSequence) defaultValue(fields()[26]);
        record.CSHDSC_BAS = fieldSetFlags()[27] ? this.CSHDSC_BAS : (CharSequence) defaultValue(fields()[27]);
        record.DENOMINTR = fieldSetFlags()[28] ? this.DENOMINTR : (CharSequence) defaultValue(fields()[28]);
        record.EXCHG_RATE = fieldSetFlags()[29] ? this.EXCHG_RATE : (Double) defaultValue(fields()[29]);
        record.EXCHG_STAT = fieldSetFlags()[30] ? this.EXCHG_STAT : (Double) defaultValue(fields()[30]);
        record.EXRATEXACC = fieldSetFlags()[31] ? this.EXRATEXACC : (Double) defaultValue(fields()[31]);
        record.EXRATE_ACC = fieldSetFlags()[32] ? this.EXRATE_ACC : (CharSequence) defaultValue(fields()[32]);
        record.GROSS_VAL = fieldSetFlags()[33] ? this.GROSS_VAL : (CharSequence) defaultValue(fields()[33]);
        record.GRS_WGT_DL = fieldSetFlags()[34] ? this.GRS_WGT_DL : (CharSequence) defaultValue(fields()[34]);
        record.INV_QTY = fieldSetFlags()[35] ? this.INV_QTY : (CharSequence) defaultValue(fields()[35]);
        record.UNIT_OF_WT = fieldSetFlags()[36] ? this.UNIT_OF_WT : (CharSequence) defaultValue(fields()[36]);
        record.SALES_UNIT = fieldSetFlags()[37] ? this.SALES_UNIT : (CharSequence) defaultValue(fields()[37]);
        record.NETVAL_INV = fieldSetFlags()[38] ? this.NETVAL_INV : (CharSequence) defaultValue(fields()[38]);
        record.NET_WGT_DL = fieldSetFlags()[39] ? this.NET_WGT_DL : (CharSequence) defaultValue(fields()[39]);
        record.NO_INV_IT = fieldSetFlags()[40] ? this.NO_INV_IT : (CharSequence) defaultValue(fields()[40]);
        record.NUMERATOR = fieldSetFlags()[41] ? this.NUMERATOR : (CharSequence) defaultValue(fields()[41]);
        record.REQ_QTY = fieldSetFlags()[42] ? this.REQ_QTY : (CharSequence) defaultValue(fields()[42]);
        record.BASE_UOM = fieldSetFlags()[43] ? this.BASE_UOM : (CharSequence) defaultValue(fields()[43]);
        record.SCALE_QTY = fieldSetFlags()[44] ? this.SCALE_QTY : (CharSequence) defaultValue(fields()[44]);
        record.SUBTOTAL_1 = fieldSetFlags()[45] ? this.SUBTOTAL_1 : (CharSequence) defaultValue(fields()[45]);
        record.SUBTOTAL_2 = fieldSetFlags()[46] ? this.SUBTOTAL_2 : (CharSequence) defaultValue(fields()[46]);
        record.SUBTOTAL_3 = fieldSetFlags()[47] ? this.SUBTOTAL_3 : (CharSequence) defaultValue(fields()[47]);
        record.SUBTOTAL_4 = fieldSetFlags()[48] ? this.SUBTOTAL_4 : (CharSequence) defaultValue(fields()[48]);
        record.SUBTOTAL_5 = fieldSetFlags()[49] ? this.SUBTOTAL_5 : (CharSequence) defaultValue(fields()[49]);
        record.SUBTOTAL_6 = fieldSetFlags()[50] ? this.SUBTOTAL_6 : (CharSequence) defaultValue(fields()[50]);
        record._BIC_ZOPK0021 = fieldSetFlags()[51] ? this._BIC_ZOPK0021 : (CharSequence) defaultValue(fields()[51]);
        record._BIC_ZOPK0053 = fieldSetFlags()[52] ? this._BIC_ZOPK0053 : (CharSequence) defaultValue(fields()[52]);
        record._BIC_ZOPK0054 = fieldSetFlags()[53] ? this._BIC_ZOPK0054 : (CharSequence) defaultValue(fields()[53]);
        record._BIC_ZOPK0055 = fieldSetFlags()[54] ? this._BIC_ZOPK0055 : (CharSequence) defaultValue(fields()[54]);
        record._BIC_ZPRICE11 = fieldSetFlags()[55] ? this._BIC_ZPRICE11 : (CharSequence) defaultValue(fields()[55]);
        record._BIC_ZPRICE12 = fieldSetFlags()[56] ? this._BIC_ZPRICE12 : (CharSequence) defaultValue(fields()[56]);
        record.CURRENCY = fieldSetFlags()[57] ? this.CURRENCY : (CharSequence) defaultValue(fields()[57]);
        record._BIC_ZOPK0145 = fieldSetFlags()[58] ? this._BIC_ZOPK0145 : (CharSequence) defaultValue(fields()[58]);
        record.AMOUNT = fieldSetFlags()[59] ? this.AMOUNT : (CharSequence) defaultValue(fields()[59]);
        record._BIC_ZOPK0048 = fieldSetFlags()[60] ? this._BIC_ZOPK0048 : (CharSequence) defaultValue(fields()[60]);
        record._BIC_ZOPK0049 = fieldSetFlags()[61] ? this._BIC_ZOPK0049 : (CharSequence) defaultValue(fields()[61]);
        record.RT_TAXCODE = fieldSetFlags()[62] ? this.RT_TAXCODE : (CharSequence) defaultValue(fields()[62]);
        record._BIC_ZOPK0047 = fieldSetFlags()[63] ? this._BIC_ZOPK0047 : (CharSequence) defaultValue(fields()[63]);
        record._BIC_ZOPC0055 = fieldSetFlags()[64] ? this._BIC_ZOPC0055 : (CharSequence) defaultValue(fields()[64]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
